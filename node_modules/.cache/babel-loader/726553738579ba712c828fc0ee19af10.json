{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\n\nfunction GroupPage(props) {\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(group => {\n      props.setGroup(group);\n      groupBooks = group.group_books;\n      groupUsers = group.group_users;\n    }).then(() => {\n      props.setGroupBooks(groupBooks);\n      props.setGroupUsers(groupUsers);\n    });\n  }, []);\n\n  if (props.groupBooks === null && props.groupUsers === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Welcome to \", props.group.name, \"!\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, props.group.description), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, props.group.group_books.status), /*#__PURE__*/React.createElement(Item.Group, {\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, props.groupBooks.map(groupBook => {\n      return /*#__PURE__*/React.createElement(Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Item.Image, {\n        size: \"tiny\",\n        src: groupBook.book.thumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Item.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, groupBook.book.title), /*#__PURE__*/React.createElement(Item.Description, {\n        alignContent: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, groupBook.status));\n    })));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupBooks: group => dispatch(setGroupBooks(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js"],"names":["React","useState","useEffect","Button","Item","Grid","connect","withRouter","setGroupBooks","setGroupUsers","setGroup","GroupPage","props","groupBooks","groupUsers","wrongHostString","document","location","toString","rightHostString","replace","fetch","then","resp","json","group","group_books","group_users","name","description","status","map","groupBook","book","thumbnail","title","mapStateToProps","state","groups","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\n\nfunction GroupPage(props) {\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((group) => {\n        props.setGroup(group);\n        groupBooks = group.group_books;\n        groupUsers = group.group_users;\n      })\n      .then(() => {\n        props.setGroupBooks(groupBooks);\n        props.setGroupUsers(groupUsers);\n      });\n  }, []);\n\n  if (props.groupBooks === null && props.groupUsers === null) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div>\n        <h1>Welcome to {props.group.name}!</h1>\n        <h1>{props.group.description}</h1>\n        <h1>{props.group.group_books.status}</h1>\n        <Item.Group divided>\n          {props.groupBooks.map((groupBook) => {\n            return (\n              <Item>\n                <Item.Image size=\"tiny\" src={groupBook.book.thumbnail} />\n                <Item.Content>\n                  {/* <Grid>\n                    <Grid.Row column={3}>\n                      <Grid.Column stretched={true}>\n                        {groupBook.book.title}\n                      </Grid.Column>\n\n                      <Grid.Column stretched={true}>\n                        By: {groupBook.book.author}\n                      </Grid.Column>\n\n                      <Grid.Column stretched={true}>\n                        Current Group Status: {groupBook.status}\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid> */}\n                  {groupBook.book.title}\n                </Item.Content>\n                <Item.Description alignContent={\"left\"}>\n                  {groupBook.status}\n                </Item.Description>\n                {/* <Item.Content verticalAlign=\"middle\">\n                  By: {groupBook.book.author}\n                </Item.Content>\n                <Item.Content verticalAlign=\"middle\">\n                  Current Group Status: {groupBook.status}\n                </Item.Content> */}\n              </Item>\n            );\n          })}\n        </Item.Group>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupBooks: (group) => dispatch(setGroupBooks(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupPage)\n);\n"]},"metadata":{},"sourceType":"module"}