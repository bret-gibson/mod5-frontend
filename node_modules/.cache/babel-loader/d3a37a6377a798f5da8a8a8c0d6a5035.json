{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Comment } from \"semantic-ui-react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PostForm from \"./PostForm\";\nimport Moment from \"react-moment\";\nimport { setSelectedUser } from \"../actions/selectedUser\";\nimport { setBookPosts } from \"../actions/post\";\n\nfunction Post(props) {\n  const [editToggle, setEditToggle] = useState(false);\n\n  const handleEditToggle = e => {\n    setEditToggle(!editToggle);\n  };\n\n  const handleUserClick = e => {\n    // props.setSelectedUser(props.postUser);\n    props.history.push(`/users/${props.post.user.id}`);\n    setEditToggle(false);\n  };\n\n  const handleDelete = e => {\n    fetch(`http://localhost:3000/posts/${props.post.id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      fetch(`http://localhost:3000/group_books/${props.groupBook.id}`).then(resp => resp.json()).then(groupBookData => {\n        props.setBookPosts(groupBookData.posts);\n      });\n    });\n  };\n\n  if (props.user && props.user.id === props.post.user.id) {\n    return editToggle ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: \"solid\",\n        borderRadius: \"5px\",\n        borderColor: \"#cbd4c2\",\n        padding: \"10px\",\n        fontSize: \"20px\",\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n      src: props.post.user.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handleUserClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      style: {\n        color: \"white\"\n      },\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, props.post.user.username), /*#__PURE__*/React.createElement(Moment, {\n      fromNow: true,\n      style: {\n        paddingLeft: \"10px\",\n        color: \"white\",\n        fontSize: \"14px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, props.post.created_at)), /*#__PURE__*/React.createElement(Comment.Text, {\n      dangerouslySetInnerHTML: {\n        __html: props.post.content\n      },\n      style: {\n        color: \"white\",\n        paddingTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleEditToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleDelete,\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"Delete Post\")))), /*#__PURE__*/React.createElement(PostForm, {\n      previousContent: props.post.content,\n      postId: props.post.id,\n      setEditToggle: setEditToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    })) :\n    /*#__PURE__*/\n    //   <div>\n    //     <h4>{props.post.user.username} says...</h4>\n    //     <p style={{ display: \"inline-block\", paddingBottom: \"10px\" }}>\n    //       {props.post.content}\n    //     </p>\n    //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n    //       Edit Post\n    //     </Button>\n    //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n    //       Delete Post\n    //     </Button>\n    //   </div>\n    React.createElement(\"div\", {\n      style: {\n        border: \"solid\",\n        borderRadius: \"5px\",\n        borderColor: \"#cbd4c2\",\n        padding: \"10px\",\n        fontSize: \"20px\",\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n      src: props.post.user.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handleUserClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      style: {\n        color: \"white\"\n      },\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, props.post.user.username), /*#__PURE__*/React.createElement(Moment, {\n      fromNow: true,\n      style: {\n        paddingLeft: \"10px\",\n        color: \"white\",\n        fontSize: \"14px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, props.post.created_at)), /*#__PURE__*/React.createElement(Comment.Text, {\n      dangerouslySetInnerHTML: {\n        __html: props.post.content\n      },\n      style: {\n        color: \"white\",\n        paddingTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleEditToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleDelete,\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Delete Post\")))));\n  } else {\n    return (\n      /*#__PURE__*/\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p>{props.post.content}</p>\n      //   </div>\n      React.createElement(\"div\", {\n        style: {\n          border: \"solid\",\n          borderRadius: \"5px\",\n          borderColor: \"#cbd4c2\",\n          padding: \"10px\",\n          fontSize: \"20px\",\n          marginTop: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Comment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Avatar, {\n        src: props.post.user.avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Comment.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: handleUserClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Author, {\n        style: {\n          color: \"white\"\n        },\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, props.post.user.username), /*#__PURE__*/React.createElement(Moment, {\n        fromNow: true,\n        style: {\n          paddingLeft: \"10px\",\n          color: \"white\",\n          fontSize: \"14px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }\n      }, props.post.created_at)), /*#__PURE__*/React.createElement(Comment.Text, {\n        style: {\n          color: \"white\",\n          paddingTop: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }\n      }, props.post.content))))\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedUser: user => dispatch(setSelectedUser(user)),\n    setBookPosts: posts => dispatch(setBookPosts(posts))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/Post.js"],"names":["React","useState","useEffect","Button","Comment","withRouter","Link","connect","PostForm","Moment","setSelectedUser","setBookPosts","Post","props","editToggle","setEditToggle","handleEditToggle","e","handleUserClick","history","push","post","user","id","handleDelete","fetch","method","then","groupBook","resp","json","groupBookData","posts","border","borderRadius","borderColor","padding","fontSize","marginTop","avatar","color","username","paddingLeft","created_at","__html","content","paddingTop","mapStateToProps","state","group","groups","groupUsers","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Comment } from \"semantic-ui-react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PostForm from \"./PostForm\";\nimport Moment from \"react-moment\";\nimport { setSelectedUser } from \"../actions/selectedUser\";\nimport { setBookPosts } from \"../actions/post\";\n\nfunction Post(props) {\n  const [editToggle, setEditToggle] = useState(false);\n\n  const handleEditToggle = (e) => {\n    setEditToggle(!editToggle);\n  };\n\n  const handleUserClick = (e) => {\n    // props.setSelectedUser(props.postUser);\n    props.history.push(`/users/${props.post.user.id}`);\n    setEditToggle(false);\n  };\n\n  const handleDelete = (e) => {\n    fetch(`http://localhost:3000/posts/${props.post.id}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      fetch(`http://localhost:3000/group_books/${props.groupBook.id}`)\n        .then((resp) => resp.json())\n        .then((groupBookData) => {\n          props.setBookPosts(groupBookData.posts);\n        });\n    });\n  };\n\n  if (props.user && props.user.id === props.post.user.id) {\n    return editToggle ? (\n      <div\n        style={{\n          border: \"solid\",\n          borderRadius: \"5px\",\n          borderColor: \"#cbd4c2\",\n          padding: \"10px\",\n          fontSize: \"20px\",\n          marginTop: \"15px\",\n        }}\n      >\n        <Comment>\n          <Comment.Avatar src={props.post.user.avatar} />\n          <Comment.Content>\n            <div onClick={handleUserClick}>\n              <Comment.Author style={{ color: \"white\" }} as=\"a\">\n                {props.post.user.username}\n              </Comment.Author>\n              <Moment\n                fromNow\n                style={{\n                  paddingLeft: \"10px\",\n                  color: \"white\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {props.post.created_at}\n              </Moment>\n            </div>\n            <Comment.Text\n              dangerouslySetInnerHTML={{ __html: props.post.content }}\n              style={{ color: \"white\", paddingTop: \"15px\" }}\n            ></Comment.Text>\n            <Comment.Actions>\n              <Comment.Action onClick={handleEditToggle}>\n                Edit Post\n              </Comment.Action>\n              <Comment.Action onClick={handleDelete} style={{ color: \"red\" }}>\n                Delete Post\n              </Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n        <PostForm\n          previousContent={props.post.content}\n          postId={props.post.id}\n          setEditToggle={setEditToggle}\n        />\n      </div>\n    ) : (\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p style={{ display: \"inline-block\", paddingBottom: \"10px\" }}>\n      //       {props.post.content}\n      //     </p>\n      //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n      //       Edit Post\n      //     </Button>\n      //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n      //       Delete Post\n      //     </Button>\n      //   </div>\n      <div\n        style={{\n          border: \"solid\",\n          borderRadius: \"5px\",\n          borderColor: \"#cbd4c2\",\n          padding: \"10px\",\n          fontSize: \"20px\",\n          marginTop: \"15px\",\n        }}\n      >\n        <Comment>\n          <Comment.Avatar src={props.post.user.avatar} />\n          <Comment.Content>\n            <div onClick={handleUserClick}>\n              <Comment.Author style={{ color: \"white\" }} as=\"a\">\n                {props.post.user.username}\n              </Comment.Author>\n              <Moment\n                fromNow\n                style={{\n                  paddingLeft: \"10px\",\n                  color: \"white\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {props.post.created_at}\n              </Moment>\n            </div>\n            <Comment.Text\n              dangerouslySetInnerHTML={{ __html: props.post.content }}\n              style={{ color: \"white\", paddingTop: \"15px\" }}\n            >\n              {/* {props.post.content} */}\n            </Comment.Text>\n            <Comment.Actions>\n              <Comment.Action onClick={handleEditToggle}>\n                Edit Post\n              </Comment.Action>\n              <Comment.Action onClick={handleDelete} style={{ color: \"red\" }}>\n                Delete Post\n              </Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n      </div>\n    );\n  } else {\n    return (\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p>{props.post.content}</p>\n      //   </div>\n      <div\n        style={{\n          border: \"solid\",\n          borderRadius: \"5px\",\n          borderColor: \"#cbd4c2\",\n          padding: \"10px\",\n          fontSize: \"20px\",\n          marginTop: \"15px\",\n        }}\n      >\n        <Comment>\n          <Comment.Avatar src={props.post.user.avatar} />\n\n          <Comment.Content>\n            <div onClick={handleUserClick}>\n              <Comment.Author style={{ color: \"white\" }} as=\"a\">\n                {props.post.user.username}\n              </Comment.Author>\n              <Moment\n                fromNow\n                style={{\n                  paddingLeft: \"10px\",\n                  color: \"white\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {props.post.created_at}\n              </Moment>\n            </div>\n            {/* <Comment.Metadata>\n              <div>\n                <Moment fromNow style={{ color: \"white\" }}>\n                  {props.post.created_at}\n                </Moment>\n              </div>\n            </Comment.Metadata> */}\n            <Comment.Text style={{ color: \"white\", paddingTop: \"15px\" }}>\n              {props.post.content}\n            </Comment.Text>\n            {/* <Comment.Actions>\n            <Comment.Action>Edit Post</Comment.Action>\n            <Comment.Action style={{ fontColor: \"red\" }}>\n              Delete Post\n            </Comment.Action>\n          </Comment.Actions> */}\n          </Comment.Content>\n        </Comment>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n    setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));\n"]},"metadata":{},"sourceType":"module"}