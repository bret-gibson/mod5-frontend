{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/App.js\";\nimport React, { Fragment } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport LoginForm from \"./components/LoginForm\";\nimport Nav from \"./components/Nav\";\nimport NotFound from \"./components/NotFound\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.updateCurrentUser = user => {\n      this.setState({\n        currentUser: user\n      });\n    };\n\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n\n    if (localStorage.getItem(\"token\")) {\n      fetch(\"http://localhost:3000/decode_token\", {\n        headers: {\n          Authenticate: localStorage.token\n        }\n      }).then(res => res.json()).then(userData => {\n        this.updateCurrentUser(userData); //if error, don't update the state\n      });\n    } else {\n      console.log(\"No token found, user is not authenticated\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      user: this.state.currentUser,\n      updateCurrentUser: this.updateCurrentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 47\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: () => this.state.currentUser ? /*#__PURE__*/React.createElement(Profile, {\n        currentUser: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => this.state.currentUser == null ? /*#__PURE__*/React.createElement(LoginForm, {\n        updateCurrentUser: this.updateCurrentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/App.js"],"names":["React","Fragment","Route","Switch","Redirect","withRouter","Profile","LoginForm","Nav","NotFound","App","Component","constructor","updateCurrentUser","user","setState","currentUser","state","componentDidMount","console","log","localStorage","getItem","fetch","headers","Authenticate","token","then","res","json","userData","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport LoginForm from \"./components/LoginForm\";\nimport Nav from \"./components/Nav\";\nimport NotFound from \"./components/NotFound\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { currentUser: null };\n  }\n\n  updateCurrentUser = (user) => {\n    this.setState({ currentUser: user });\n  };\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    if (localStorage.getItem(\"token\")) {\n      fetch(\"http://localhost:3000/decode_token\", {\n        headers: {\n          Authenticate: localStorage.token,\n        },\n      })\n        .then((res) => res.json())\n        .then((userData) => {\n          this.updateCurrentUser(userData);\n          //if error, don't update the state\n        });\n    } else {\n      console.log(\"No token found, user is not authenticated\");\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Nav\n          user={this.state.currentUser}\n          updateCurrentUser={this.updateCurrentUser}\n        />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n          <Route\n            exact\n            path=\"/profile\"\n            render={() =>\n              this.state.currentUser ? (\n                <Profile currentUser={this.state.currentUser} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={() =>\n              this.state.currentUser == null ? (\n                <LoginForm updateCurrentUser={this.updateCurrentUser} />\n              ) : (\n                <Redirect to=\"/profile\" />\n              )\n            }\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}