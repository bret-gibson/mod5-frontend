{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image, Card, Divider } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\nimport { setGroupBook, setGroupUsers } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\n\nfunction DashboardBooks(props) {\n  const handleGroupBookClick = groupBook => {\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`).then(resp => resp.json()).then(groupBookData => {\n      props.setGroupBook(groupBookData);\n      props.setBookPosts(groupBookData.posts);\n    }).then(() => {\n      fetch(`http://localhost:3000/groups/${groupBook.group_id}`).then(resp => resp.json()).then(groupData => {\n        props.setGroupUsers(groupData.users);\n      });\n    }).then(() => {\n      props.history.push(`/group_books/${groupBook.id}`);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"My Active Books\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), props.user.groups.map(group => {\n    return group.group_books.map(groupBook => {\n      if (groupBook.active === true) {\n        return /*#__PURE__*/React.createElement(Card, {\n          onClick: () => {\n            handleGroupBookClick(groupBook);\n          },\n          style: {\n            display: \"inline-block\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Image, {\n          src: groupBook.book.thumbnail,\n          wrapped: true,\n          ui: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, groupBook.book.title), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }\n        }, \"By: \", groupBook.book.author), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 23\n          }\n        }, \"Club: \", group.name))));\n      }\n    });\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroupBook: groupBook => dispatch(setGroupBook(groupBook)),\n    setBookPosts: posts => dispatch(setBookPosts(posts)),\n    setGroupUsers: group => dispatch(setGroupUsers(group))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardBooks));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js"],"names":["React","useState","useEffect","NavLink","withRouter","Link","Menu","Button","Image","Card","Divider","setCurrentUser","connect","setGroupBook","setGroupUsers","setBookPosts","DashboardBooks","props","handleGroupBookClick","groupBook","fetch","id","then","resp","json","groupBookData","posts","group_id","groupData","users","history","push","user","groups","map","group","group_books","active","display","book","thumbnail","title","author","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image, Card, Divider } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\nimport { setGroupBook, setGroupUsers } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\n\nfunction DashboardBooks(props) {\n  const handleGroupBookClick = (groupBook) => {\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`)\n      .then((resp) => resp.json())\n      .then((groupBookData) => {\n        props.setGroupBook(groupBookData);\n        props.setBookPosts(groupBookData.posts);\n      })\n      .then(() => {\n        fetch(`http://localhost:3000/groups/${groupBook.group_id}`)\n          .then((resp) => resp.json())\n          .then((groupData) => {\n            props.setGroupUsers(groupData.users);\n          });\n      })\n      .then(() => {\n        props.history.push(`/group_books/${groupBook.id}`);\n      });\n  };\n  return (\n    <div>\n      <h1>My Active Books</h1>\n      <div style={{}}>\n        <Divider />\n        {props.user.groups.map((group) => {\n          return group.group_books.map((groupBook) => {\n            if (groupBook.active === true) {\n              return (\n                <Card\n                  onClick={() => {\n                    handleGroupBookClick(groupBook);\n                  }}\n                  style={{ display: \"inline-block\" }}\n                >\n                  <Image src={groupBook.book.thumbnail} wrapped ui={false} />\n                  <Card.Content>\n                    <Card.Header>{groupBook.book.title}</Card.Header>\n                    <Card.Meta>\n                      <span>By: {groupBook.book.author}</span>\n                      <h3>Club: {group.name}</h3>\n                    </Card.Meta>\n                  </Card.Content>\n                </Card>\n              );\n            }\n          });\n        })}\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroupBook: (groupBook) => dispatch(setGroupBook(groupBook)),\n    setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(DashboardBooks)\n);\n"]},"metadata":{},"sourceType":"module"}