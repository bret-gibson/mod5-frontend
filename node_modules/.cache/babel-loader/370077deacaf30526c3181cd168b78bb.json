{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Modal, Card } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup, setGroupBook, setActiveBook } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = groupBook => {\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`).then(resp => resp.json()).then(groupBookData => {\n      props.setGroupBook(groupBookData);\n      props.setBookPosts(groupBookData.posts);\n    }).then(() => {\n      props.history.push(`/group_books/${groupBook.id}`);\n    });\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n    props.group.users.forEach(user => {\n      if (user.id === props.user.id) {\n        userInGroup = true;\n      }\n    });\n    return userInGroup;\n  };\n\n  const handleGroupJoin = e => {\n    fetch(\"http://localhost:3000/group_users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          user_id: props.user.id,\n          group_id: props.group.id\n        }\n      })\n    }).then(() => {\n      fetch(`http://localhost:3000/groups/${props.group.id}`).then(resp => resp.json()).then(groupData => {\n        props.setGroupUsers(groupData);\n      });\n    });\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(group => {\n      props.setGroup(group);\n      props.setGroupUsers(group.users);\n      groupBooks = group.group_books;\n      activeBook = groupBooks.find(book => {\n        book.active === true;\n      });\n      groupUsers = group.users;\n    }).then(() => {\n      props.setGroupBooks(groupBooks);\n      props.setGroupUsers(groupUsers);\n      props.setActiveBook(activeBook);\n    });\n  }, [props.groupUsers]);\n\n  if (props.groupBooks === null && props.groupUsers === null && props.group === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Welcome to \", props.group.name, \"!\"), props.group.users.length === 1 && props.group.users.length !== 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, props.group.users.length, \" member\") : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, props.group.users.length, \" members\"), isUserInGroup() ? /*#__PURE__*/React.createElement(Button, {\n      disabled: true,\n      size: \"huge\",\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Already a member\") : /*#__PURE__*/React.createElement(Modal, {\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        onClick: handleGroupJoin,\n        size: \"huge\",\n        floated: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \"Join Group\"),\n      closeIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Club Joined\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, \"You have joined \", props.group.name, \"!\"))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, props.group.description), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Currently Reading\")), props.groupBooks ? /*#__PURE__*/React.createElement(Item.Group, {\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, props.groupBooks.map(groupBook => {\n      return /*#__PURE__*/React.createElement(Item, {\n        key: groupBook.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Item.Image, {\n        onClick: () => {\n          handleGroupBookClick(groupBook);\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: `/group_books/${groupBook.id}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 30\n            }\n          });\n        },\n        size: \"small\",\n        src: groupBook.book.thumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Item.Content, {\n        style: {\n          marginLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Item.Header, {\n        onClick: () => {\n          handleGroupBookClick(groupBook);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, groupBook.book.title), /*#__PURE__*/React.createElement(Item.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 23\n        }\n      }, groupBook.book.author)), /*#__PURE__*/React.createElement(Item.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 23\n        }\n      }, groupBook.status))));\n    })) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, \"This group has no books added!\"));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    user: state.user,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n    groupBook: state.groups.groupBook\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupBooks: group => dispatch(setGroupBooks(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setGroupBook: groupBook => dispatch(setGroupBook(groupBook)),\n    setBookPosts: posts => dispatch(setBookPosts(posts)),\n    setActiveBook: book => dispatch(setBookPosts(book))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js"],"names":["React","useState","useEffect","Button","Item","Modal","Card","connect","withRouter","Link","Redirect","setGroupBooks","setGroupUsers","setGroup","setGroupBook","setActiveBook","setBookPosts","GroupPage","props","handleGroupBookClick","groupBook","fetch","id","then","resp","json","groupBookData","posts","history","push","isUserInGroup","userInGroup","group","users","forEach","user","handleGroupJoin","e","method","headers","body","JSON","stringify","user_id","group_id","groupData","groupBooks","groupUsers","wrongHostString","document","location","toString","rightHostString","replace","group_books","activeBook","find","book","active","name","length","description","textAlign","map","thumbnail","marginLeft","title","author","status","mapStateToProps","state","groups","selectedGroupBook","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Modal, Card } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\nimport {\n  setGroupBooks,\n  setGroupUsers,\n  setGroup,\n  setGroupBook,\n  setActiveBook,\n} from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = (groupBook) => {\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`)\n      .then((resp) => resp.json())\n      .then((groupBookData) => {\n        props.setGroupBook(groupBookData);\n        props.setBookPosts(groupBookData.posts);\n      })\n      .then(() => {\n        props.history.push(`/group_books/${groupBook.id}`);\n      });\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n    props.group.users.forEach((user) => {\n      if (user.id === props.user.id) {\n        userInGroup = true;\n      }\n    });\n    return userInGroup;\n  };\n\n  const handleGroupJoin = (e) => {\n    fetch(\"http://localhost:3000/group_users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          user_id: props.user.id,\n          group_id: props.group.id,\n        },\n      }),\n    }).then(() => {\n      fetch(`http://localhost:3000/groups/${props.group.id}`)\n        .then((resp) => resp.json())\n        .then((groupData) => {\n          props.setGroupUsers(groupData);\n        });\n    });\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((group) => {\n        props.setGroup(group);\n        props.setGroupUsers(group.users);\n\n        groupBooks = group.group_books;\n        activeBook = groupBooks.find((book) => {\n          book.active === true;\n        });\n        groupUsers = group.users;\n      })\n      .then(() => {\n        props.setGroupBooks(groupBooks);\n        props.setGroupUsers(groupUsers);\n        props.setActiveBook(activeBook);\n      });\n  }, [props.groupUsers]);\n\n  if (\n    props.groupBooks === null &&\n    props.groupUsers === null &&\n    props.group === null\n  ) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div>\n        <h1>Welcome to {props.group.name}!</h1>\n        {props.group.users.length === 1 && props.group.users.length !== 0 ? (\n          <h3>{props.group.users.length} member</h3>\n        ) : (\n          <h3>{props.group.users.length} members</h3>\n        )}\n        {isUserInGroup() ? (\n          <Button disabled size=\"huge\" floated=\"right\">\n            Already a member\n          </Button>\n        ) : (\n          <Modal\n            trigger={\n              <Button onClick={handleGroupJoin} size=\"huge\" floated=\"right\">\n                Join Group\n              </Button>\n            }\n            closeIcon\n          >\n            <Modal.Header>Club Joined</Modal.Header>\n\n            <Modal.Content>\n              <Modal.Description>\n                You have joined {props.group.name}!\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        )}\n        <h1>{props.group.description}</h1>\n        <div style={{ textAlign: \"center\" }}>\n          <h3>Currently Reading</h3>\n          {/* <Card style={{ display: \"inline-block\" }}>\n            <Image src={props.book.thumbnail} wrapped ui={false} />\n            <Card.Content>\n              <Card.Header>{props.book.title}</Card.Header>\n              <Card.Meta>\n                <span>By: {props.book.author}</span>\n              </Card.Meta>\n            </Card.Content>\n          </Card> */}\n        </div>\n        {props.groupBooks ? (\n          <Item.Group divided>\n            {props.groupBooks.map((groupBook) => {\n              return (\n                <Item key={groupBook.id}>\n                  {/* <Link\n                    to={``}\n                    onClick={() => {\n                      handleGroupBookClick(groupBook);\n                    }}\n                  > */}\n                  <Item.Image\n                    onClick={() => {\n                      handleGroupBookClick(groupBook);\n                      return <Redirect to={`/group_books/${groupBook.id}`} />;\n                    }}\n                    size=\"small\"\n                    src={groupBook.book.thumbnail}\n                  />\n                  {/* </Link> */}\n                  <Item.Content style={{ marginLeft: \"20px\" }}>\n                    {/* <Link\n                      to=\"\"\n                      onClick={() => {\n                        handleGroupBookClick(groupBook);\n                      }}\n                    > */}\n                    <Item.Header\n                      onClick={() => {\n                        handleGroupBookClick(groupBook);\n                      }}\n                    >\n                      {groupBook.book.title}\n                    </Item.Header>\n                    <Item.Meta>\n                      <span>{groupBook.book.author}</span>\n                    </Item.Meta>\n                    <Item.Description>\n                      <p>{groupBook.status}</p>\n                    </Item.Description>\n                  </Item.Content>\n                </Item>\n              );\n            })}\n          </Item.Group>\n        ) : (\n          <h1>This group has no books added!</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    user: state.user,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n    groupBook: state.groups.groupBook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupBooks: (group) => dispatch(setGroupBooks(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setGroupBook: (groupBook) => dispatch(setGroupBook(groupBook)),\n    setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n    setActiveBook: (book) => dispatch(setBookPosts(book)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupPage)\n);\n"]},"metadata":{},"sourceType":"module"}