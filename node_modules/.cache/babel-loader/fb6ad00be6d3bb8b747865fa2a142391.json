{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Modal, Image, Card } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup, setGroupBook } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\nimport { setActiveBook } from \"../actions/activeBook\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = groupBook => {\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`).then(resp => resp.json()).then(groupBookData => {\n      props.setGroupBook(groupBookData);\n      props.setBookPosts(groupBookData.posts);\n    }).then(() => {\n      props.history.push(`/group_books/${groupBook.id}`);\n    });\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n\n    if (props.user) {\n      props.group.users.forEach(user => {\n        if (user.id === props.user.id) {\n          userInGroup = true;\n        }\n      });\n    }\n\n    return userInGroup;\n  };\n\n  const handleGroupJoin = e => {\n    fetch(\"http://localhost:3000/group_users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          user_id: props.user.id,\n          group_id: props.group.id\n        }\n      })\n    }).then(() => {\n      fetch(`http://localhost:3000/groups/${props.group.id}`).then(resp => resp.json()).then(groupData => {\n        props.setGroupUsers(groupData);\n      });\n    });\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let activeBook = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(group => {\n      props.setGroup(group);\n      props.setGroupUsers(group.users);\n      groupBooks = group.group_books; // activeBook = groupBooks.find((book) => {\n      //   return book.active === true;\n      // });\n\n      groupBooks.forEach(book => {\n        if (book.active === true) {\n          activeBook = book;\n        }\n      });\n      groupUsers = group.users;\n    }).then(() => {\n      props.setGroupBooks(groupBooks);\n      props.setGroupUsers(groupUsers);\n\n      if (activeBook) {\n        props.setActiveBook(activeBook);\n      }\n    });\n  }, []);\n\n  if (props.groupBooks === null && props.groupUsers === null && props.group === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else if (props.activeBook === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {}\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    user: state.user,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n    groupBook: state.groups.groupBook,\n    activeBook: state.activeBook\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupBooks: group => dispatch(setGroupBooks(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setGroupBook: groupBook => dispatch(setGroupBook(groupBook)),\n    setBookPosts: posts => dispatch(setBookPosts(posts)),\n    setActiveBook: book => dispatch(setActiveBook(book))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js"],"names":["React","useState","useEffect","Button","Item","Modal","Image","Card","connect","withRouter","Link","Redirect","setGroupBooks","setGroupUsers","setGroup","setGroupBook","setBookPosts","setActiveBook","GroupPage","props","handleGroupBookClick","groupBook","fetch","id","then","resp","json","groupBookData","posts","history","push","isUserInGroup","userInGroup","user","group","users","forEach","handleGroupJoin","e","method","headers","body","JSON","stringify","user_id","group_id","groupData","groupBooks","groupUsers","activeBook","wrongHostString","document","location","toString","rightHostString","replace","group_books","book","active","mapStateToProps","state","groups","selectedGroupBook","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Modal, Image, Card } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\nimport {\n  setGroupBooks,\n  setGroupUsers,\n  setGroup,\n  setGroupBook,\n} from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\nimport { setActiveBook } from \"../actions/activeBook\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = (groupBook) => {\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`)\n      .then((resp) => resp.json())\n      .then((groupBookData) => {\n        props.setGroupBook(groupBookData);\n        props.setBookPosts(groupBookData.posts);\n      })\n      .then(() => {\n        props.history.push(`/group_books/${groupBook.id}`);\n      });\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n    if (props.user) {\n      props.group.users.forEach((user) => {\n        if (user.id === props.user.id) {\n          userInGroup = true;\n        }\n      });\n    }\n    return userInGroup;\n  };\n\n  const handleGroupJoin = (e) => {\n    fetch(\"http://localhost:3000/group_users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          user_id: props.user.id,\n          group_id: props.group.id,\n        },\n      }),\n    }).then(() => {\n      fetch(`http://localhost:3000/groups/${props.group.id}`)\n        .then((resp) => resp.json())\n        .then((groupData) => {\n          props.setGroupUsers(groupData);\n        });\n    });\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let activeBook = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((group) => {\n        props.setGroup(group);\n        props.setGroupUsers(group.users);\n\n        groupBooks = group.group_books;\n        // activeBook = groupBooks.find((book) => {\n        //   return book.active === true;\n        // });\n        groupBooks.forEach((book) => {\n          if (book.active === true) {\n            activeBook = book;\n          }\n        });\n        groupUsers = group.users;\n      })\n      .then(() => {\n        props.setGroupBooks(groupBooks);\n        props.setGroupUsers(groupUsers);\n        if (activeBook) {\n          props.setActiveBook(activeBook);\n        }\n      });\n  }, []);\n  if (\n    props.groupBooks === null &&\n    props.groupUsers === null &&\n    props.group === null\n  ) {\n    return <h1>Loading...</h1>;\n  } else if (props.activeBook === null){\n    return <h1>Loading...</h1>\n  } else{\n    \n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    user: state.user,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n    groupBook: state.groups.groupBook,\n    activeBook: state.activeBook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupBooks: (group) => dispatch(setGroupBooks(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setGroupBook: (groupBook) => dispatch(setGroupBook(groupBook)),\n    setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n    setActiveBook: (book) => dispatch(setActiveBook(book)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupPage)\n);\n"]},"metadata":{},"sourceType":"module"}