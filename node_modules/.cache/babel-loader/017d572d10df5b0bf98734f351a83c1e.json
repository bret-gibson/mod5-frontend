{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookSearchContainer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setMostPopular, setSearchedBooks } from \"../actions/book\";\nimport BookSearchItem from \"./BookSearchItem\";\n\nfunction BookSearchContainer(props) {\n  //   return this.props.user ? (\n  const [input, setInput] = useState({\n    search: \"\"\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:3000/books\").then(resp => resp.json()).then(books => {\n      function compare(a, b) {\n        const groupBooksA = a.group_books.length;\n        const groupBooksB = b.group_books.length;\n        let comparison = 0;\n\n        if (groupBooksA > groupBooksB) {\n          comparison = -1;\n        } else if (groupBooksA < groupBooksB) {\n          comparison = 1;\n        }\n\n        return comparison;\n      }\n\n      books.sort(compare).slice(0, 12);\n      let slicedBooks = books.slice(0, 12);\n      props.setMostPopular(slicedBooks);\n    });\n  }, []);\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: [e.target.value]\n    });\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    return \"hi\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Find a Book!\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Search Books\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    placeholder: \"Search\",\n    name: \"search\",\n    value: input.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSearchSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Search\")), props.searchedBooks === null ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }, \"Most Popular Books\")(props.mostPopular.map(book => {\n    return /*#__PURE__*/React.createElement(BookSearchItem, {\n      book: book,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 20\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Search Results\"));\n}\n\nconst mapStateToProps = state => {\n  return {\n    mostPopular: state.books.mostPopular,\n    searchedBooks: state.books.searchedBooks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMostPopular: mostPopularBooks => dispatch(setMostPopular(mostPopularBooks)),\n    setSearchedBooks: searchedBooks => dispatch(setSearchedBooks(searchedBooks))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BookSearchContainer));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookSearchContainer.js"],"names":["React","useState","useEffect","Card","Grid","Image","Button","Form","connect","useSelector","withRouter","setMostPopular","setSearchedBooks","BookSearchItem","BookSearchContainer","props","input","setInput","search","fetch","then","resp","json","books","compare","a","b","groupBooksA","group_books","length","groupBooksB","comparison","sort","slice","slicedBooks","handleChange","e","target","name","value","handleSearchSubmit","preventDefault","searchedBooks","mostPopular","map","book","mapStateToProps","state","mapDispatchToProps","dispatch","mostPopularBooks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setMostPopular, setSearchedBooks } from \"../actions/book\";\nimport BookSearchItem from \"./BookSearchItem\";\n\nfunction BookSearchContainer(props) {\n  //   return this.props.user ? (\n\n  const [input, setInput] = useState({\n    search: \"\",\n  });\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/books\")\n      .then((resp) => resp.json())\n      .then((books) => {\n        function compare(a, b) {\n          const groupBooksA = a.group_books.length;\n          const groupBooksB = b.group_books.length;\n\n          let comparison = 0;\n          if (groupBooksA > groupBooksB) {\n            comparison = -1;\n          } else if (groupBooksA < groupBooksB) {\n            comparison = 1;\n          }\n          return comparison;\n        }\n        books.sort(compare).slice(0, 12);\n        let slicedBooks = books.slice(0, 12);\n        props.setMostPopular(slicedBooks);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: [e.target.value],\n    });\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    return \"hi\";\n  };\n\n  return (\n    <div>\n      <h1>Find a Book!</h1>\n      <Form>\n        <Form.Field>\n          <label>Search Books</label>\n          <input\n            onChange={handleChange}\n            placeholder=\"Search\"\n            name=\"search\"\n            value={input.search}\n          />\n        </Form.Field>\n        <Button onClick={handleSearchSubmit}>Search</Button>\n      </Form>\n      {props.searchedBooks === null ? (\n        (<h2>Most Popular Books</h2>)(\n          props.mostPopular.map((book) => {\n            return <BookSearchItem book={book} />;\n          })\n        )\n      ) : (\n        <h2>Search Results</h2>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    mostPopular: state.books.mostPopular,\n    searchedBooks: state.books.searchedBooks,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMostPopular: (mostPopularBooks) =>\n      dispatch(setMostPopular(mostPopularBooks)),\n    setSearchedBooks: (searchedBooks) =>\n      dispatch(setSearchedBooks(searchedBooks)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BookSearchContainer)\n);\n"]},"metadata":{},"sourceType":"module"}