{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  const [userActiveBooks, setUserActiveBooks] = useState([]); // useEffect(() => {\n  //   getUserActiveBooks();\n  // }, []);\n  // const getUserActiveBooks = () => {\n  //   let activeBooks = [];\n  //   props.user.groups.map((group) => {\n  //     return group.group_books.map((groupBook) => {\n  //       if (groupBook.active === true) {\n  //         activeBooks.push(groupBook.book);\n  //       }\n  //     });\n  //   });\n  //   setUserActiveBooks(activeBooks);\n  //   return activeBooks;\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"My Active Books\"), props.user.groups.map(group => {\n    return group.group_books.map(groupBook => {\n      if (groupBook.active === true) {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }, groupBook.book.title, \", \", group.name);\n      }\n    });\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    // user: state.user.user,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: user => dispatch(setCurrentUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardBooks));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js"],"names":["React","useState","useEffect","NavLink","withRouter","Link","Menu","Button","Image","setCurrentUser","connect","DashboardBooks","props","userActiveBooks","setUserActiveBooks","user","groups","map","group","group_books","groupBook","active","book","title","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,QAA0C,kBAA1C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD,CAD6B,CAG7B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAUGW,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAChC,WAAOA,KAAK,CAACC,WAAN,CAAkBF,GAAlB,CAAuBG,SAAD,IAAe;AAC1C,UAAIA,SAAS,CAACC,MAAV,KAAqB,IAAzB,EAA+B;AAC7B,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,SAAS,CAACE,IAAV,CAAeC,KADlB,QAC2BL,KAAK,CAACM,IADjC,CADF;AAKD;AACF,KARM,CAAP;AASD,GAVA,CAVH,CADF;AAwBD;;AACD,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL;AACAX,IAAAA,IAAI,EAAEW,KAAK,CAACX;AAFP,GAAP;AAID,CALD;;AAOA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnB,IAAAA,cAAc,EAAGM,IAAD,IAAUa,QAAQ,CAACnB,cAAc,CAACM,IAAD,CAAf;AAD7B,GAAP;AAGD,CAJD;;AAKA,eAAeX,UAAU,CACvBM,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,cAA7C,CADuB,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  const [userActiveBooks, setUserActiveBooks] = useState([]);\n\n  // useEffect(() => {\n  //   getUserActiveBooks();\n  // }, []);\n\n  // const getUserActiveBooks = () => {\n  //   let activeBooks = [];\n  //   props.user.groups.map((group) => {\n  //     return group.group_books.map((groupBook) => {\n  //       if (groupBook.active === true) {\n  //         activeBooks.push(groupBook.book);\n  //       }\n  //     });\n  //   });\n  //   setUserActiveBooks(activeBooks);\n  //   return activeBooks;\n  // };\n\n  return (\n    <div>\n      <h1>My Active Books</h1>\n\n       {/* {userActiveBooks.length !== 0 ? (\n        userActiveBooks.map((activeBook) => {\n          return <h1>{activeBook.book}</h1>;\n        })\n      ) : (\n        <h1>You have no active books</h1>\n      )}  */}\n      {props.user.groups.map((group) => {\n        return group.group_books.map((groupBook) => {\n          if (groupBook.active === true) {\n            return (\n              <h1>\n                {groupBook.book.title}, {group.name}\n              </h1>\n            );\n          }\n        });\n      })}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // user: state.user.user,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(DashboardBooks)\n);\n"]},"metadata":{},"sourceType":"module"}