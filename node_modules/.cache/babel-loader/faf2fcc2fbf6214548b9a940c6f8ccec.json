{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  const [userActiveBooks, setUserActiveBooks] = useState([]);\n  useEffect(() => {\n    getUserActiveBooks();\n  }, []);\n\n  const getUserActiveBooks = () => {\n    let activeBooks = [];\n    props.user.groups.map(group => {\n      return group.group_books.map(groupBook => {\n        if (groupBook.active === true) {\n          activeBooks.push(groupBook.book);\n        }\n      });\n    });\n    setUserActiveBooks(activeBooks);\n    return activeBooks;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"My Active Books\"), userActiveBooks.length !== 0 ? userActiveBooks.map(activeBook => {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }\n    }, activeBook.book);\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"You have no active books\"), props.user.groups.map(group => {\n    return group.group_books.map(groupBook => {\n      if (groupBook.active === true) {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }, groupBook.book.title, \", \", group.name);\n      }\n    });\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    // user: state.user.user,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: user => dispatch(setCurrentUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardBooks));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js"],"names":["React","useState","useEffect","NavLink","withRouter","Link","Menu","Button","Image","setCurrentUser","connect","DashboardBooks","props","userActiveBooks","setUserActiveBooks","getUserActiveBooks","activeBooks","user","groups","map","group","group_books","groupBook","active","push","book","length","activeBook","title","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,QAA0C,kBAA1C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,WAAW,GAAG,EAAlB;AACAJ,IAAAA,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAC/B,aAAOA,KAAK,CAACC,WAAN,CAAkBF,GAAlB,CAAuBG,SAAD,IAAe;AAC1C,YAAIA,SAAS,CAACC,MAAV,KAAqB,IAAzB,EAA+B;AAC7BP,UAAAA,WAAW,CAACQ,IAAZ,CAAiBF,SAAS,CAACG,IAA3B;AACD;AACF,OAJM,CAAP;AAKD,KAND;AAOAX,IAAAA,kBAAkB,CAACE,WAAD,CAAlB;AACA,WAAOA,WAAP;AACD,GAXD;;AAaA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGIH,eAAe,CAACa,MAAhB,KAA2B,CAA3B,GACAb,eAAe,CAACM,GAAhB,CAAqBQ,UAAD,IAAgB;AAClC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,UAAU,CAACF,IAAhB,CAAP;AACD,GAFD,CADA,gBAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCARJ,EAUGb,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAChC,WAAOA,KAAK,CAACC,WAAN,CAAkBF,GAAlB,CAAuBG,SAAD,IAAe;AAC1C,UAAIA,SAAS,CAACC,MAAV,KAAqB,IAAzB,EAA+B;AAC7B,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,SAAS,CAACG,IAAV,CAAeG,KADlB,QAC2BR,KAAK,CAACS,IADjC,CADF;AAKD;AACF,KARM,CAAP;AASD,GAVA,CAVH,CADF;AAwBD;;AACD,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL;AACAd,IAAAA,IAAI,EAAEc,KAAK,CAACd;AAFP,GAAP;AAID,CALD;;AAOA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLxB,IAAAA,cAAc,EAAGQ,IAAD,IAAUgB,QAAQ,CAACxB,cAAc,CAACQ,IAAD,CAAf;AAD7B,GAAP;AAGD,CAJD;;AAKA,eAAeb,UAAU,CACvBM,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,cAA7C,CADuB,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  const [userActiveBooks, setUserActiveBooks] = useState([]);\n\n  useEffect(() => {\n    getUserActiveBooks();\n  }, []);\n\n  const getUserActiveBooks = () => {\n    let activeBooks = [];\n    props.user.groups.map((group) => {\n      return group.group_books.map((groupBook) => {\n        if (groupBook.active === true) {\n          activeBooks.push(groupBook.book);\n        }\n      });\n    });\n    setUserActiveBooks(activeBooks);\n    return activeBooks;\n  };\n\n  return (\n    <div>\n      <h1>My Active Books</h1>\n\n       {userActiveBooks.length !== 0 ? (\n        userActiveBooks.map((activeBook) => {\n          return <h1>{activeBook.book}</h1>;\n        })\n      ) : (\n        <h1>You have no active books</h1>\n      )} \n      {props.user.groups.map((group) => {\n        return group.group_books.map((groupBook) => {\n          if (groupBook.active === true) {\n            return (\n              <h1>\n                {groupBook.book.title}, {group.name}\n              </h1>\n            );\n          }\n        });\n      })}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // user: state.user.user,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(DashboardBooks)\n);\n"]},"metadata":{},"sourceType":"module"}