{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  const [userActiveBooks, setUserActiveBooks] = useState(0);\n\n  const getUserActiveBooks = () => {\n    let activeBooks = [];\n    {\n      props.user.groups.map(group => {\n        return group.group_books.map(groupBook => {\n          if (groupBook.active === true) {\n            activeBooks.push(groupBook.book);\n          }\n        });\n      });\n    }\n    setUserActiveBooks(activeBooks);\n    return activeBooks;\n  };\n\n  useEffect(() => {\n    getUserActiveBooks();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"My Active Books\"), userActiveBooks.map(book => {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, activeBook.book.title, \", \", group.name);\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    // user: state.user.user,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: user => dispatch(setCurrentUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardBooks));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js"],"names":["React","useState","useEffect","NavLink","withRouter","Link","Menu","Button","Image","setCurrentUser","connect","DashboardBooks","props","userActiveBooks","setUserActiveBooks","getUserActiveBooks","activeBooks","user","groups","map","group","group_books","groupBook","active","push","book","activeBook","title","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,QAA0C,kBAA1C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,CAAD,CAAtD;;AACA,QAAMc,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,WAAW,GAAG,EAAlB;AACA;AACEJ,MAAAA,KAAK,CAACK,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAC/B,eAAOA,KAAK,CAACC,WAAN,CAAkBF,GAAlB,CAAuBG,SAAD,IAAe;AAC1C,cAAIA,SAAS,CAACC,MAAV,KAAqB,IAAzB,EAA+B;AAC7BP,YAAAA,WAAW,CAACQ,IAAZ,CAAiBF,SAAS,CAACG,IAA3B;AACD;AACF,SAJM,CAAP;AAKD,OAND;AAOD;AACDX,IAAAA,kBAAkB,CAACE,WAAD,CAAlB;AACA,WAAOA,WAAP;AACD,GAbD;;AAeAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,kBAAkB;AACnB,GAFQ,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGF,eAAe,CAACM,GAAhB,CAAqBM,IAAD,IAAU;AAC7B,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,UAAU,CAACD,IAAX,CAAgBE,KADnB,QAC4BP,KAAK,CAACQ,IADlC,CADF;AAKD,GANA,CAFH,CADF;AAuBD;;AACD,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL;AACAb,IAAAA,IAAI,EAAEa,KAAK,CAACb;AAFP,GAAP;AAID,CALD;;AAOA,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLvB,IAAAA,cAAc,EAAGQ,IAAD,IAAUe,QAAQ,CAACvB,cAAc,CAACQ,IAAD,CAAf;AAD7B,GAAP;AAGD,CAJD;;AAKA,eAAeb,UAAU,CACvBM,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,cAA7C,CADuB,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  const [userActiveBooks, setUserActiveBooks] = useState(0);\n  const getUserActiveBooks = () => {\n    let activeBooks = [];\n    {\n      props.user.groups.map((group) => {\n        return group.group_books.map((groupBook) => {\n          if (groupBook.active === true) {\n            activeBooks.push(groupBook.book);\n          }\n        });\n      });\n    }\n    setUserActiveBooks(activeBooks);\n    return activeBooks;\n  };\n\n  useEffect(() => {\n    getUserActiveBooks();\n  });\n\n  return (\n    <div>\n      <h1>My Active Books</h1>\n      {userActiveBooks.map((book) => {\n        return (\n          <h1>\n            {activeBook.book.title}, {group.name}\n          </h1>\n        );\n      })}\n      {/* {props.user.groups.map((group) => {\n        return group.group_books.map((groupBook) => {\n          if (groupBook.active === true) {\n            return (\n              <h1>\n                {groupBook.book.title}, {group.name}\n              </h1>\n            );\n          }\n        });\n      })} */}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // user: state.user.user,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(DashboardBooks)\n);\n"]},"metadata":{},"sourceType":"module"}