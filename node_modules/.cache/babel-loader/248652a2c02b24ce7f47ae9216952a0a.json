{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookDiscussionPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid, Image } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\nimport PostForm from \"./PostForm\";\n\nfunction BookDiscussionPage(props) {\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(groupBook => {\n      props.setGroupBook(groupBook);\n      groupBooks = group.group_books;\n      groupUsers = group.group_users;\n    }).then(() => {\n      props.setGroupBooks(groupBooks);\n      props.setGroupUsers(groupUsers);\n    });\n  }, []);\n\n  if (props.groupBook === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: props.groupBook.book.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Title: \", props.groupBook.book.title), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Author: \", props.groupBook.book.author), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Summary: \", props.groupBook.book.summary), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Discussion: \"), props.groupBook.posts.map(post => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }\n      }, post.content);\n    }), /*#__PURE__*/React.createElement(PostForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BookDiscussionPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookDiscussionPage.js"],"names":["React","useState","useEffect","Button","Item","Grid","Image","connect","withRouter","Link","setGroupBooks","setGroupUsers","setGroup","PostForm","BookDiscussionPage","props","groupBooks","groupUsers","wrongHostString","document","location","toString","rightHostString","replace","fetch","then","resp","json","groupBook","setGroupBook","group","group_books","group_users","book","thumbnail","title","author","summary","posts","map","post","content","mapStateToProps","state","groups","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid, Image } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\nimport PostForm from \"./PostForm\";\n\nfunction BookDiscussionPage(props) {\n    useEffect(() => {\n      let groupBooks = null;\n      let groupUsers = null;\n      let wrongHostString = document.location.toString();\n      let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n      fetch(rightHostString)\n        .then((resp) => resp.json())\n        .then((groupBook) => {\n          props.setGroupBook(groupBook);\n          groupBooks = group.group_books;\n          groupUsers = group.group_users;\n        })\n        .then(() => {\n          props.setGroupBooks(groupBooks);\n          props.setGroupUsers(groupUsers);\n        });\n    }, []);\n\n  if (props.groupBook === null) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div>\n        <Image src={props.groupBook.book.thumbnail}></Image>\n        <h1>Title: {props.groupBook.book.title}</h1>\n        <h3>Author: {props.groupBook.book.author}</h3>\n        <h3>Summary: {props.groupBook.book.summary}</h3>\n        <h3>Discussion: </h3>\n        {props.groupBook.posts.map((post) => {\n          return <p>{post.content}</p>;\n        })}\n\n        <PostForm />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BookDiscussionPage)\n);\n"]},"metadata":{},"sourceType":"module"}