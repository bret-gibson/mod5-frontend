{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Form, Segment, Message } from \"semantic-ui-react\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLoginSubmit = () => {\n      console.log(\"attempting to log in\");\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application.json\"\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(\"response from the server\", data);\n\n        if (data.error_message) {\n          alert(data.error_message);\n        } else {\n          //successful log in\n          localStorage.setItem(\"token\", data.token);\n          this.props.updateCurrentUser(data.user_data);\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleLoginSubmit,\n      size: \"mini\",\n      key: \"mini\",\n      loading: this.props.authenticatingUser,\n      error: this.props.failedLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Message, {\n      error: true,\n      header: this.props.failedLogin ? this.props.error : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      label: \"username\",\n      placeholder: \"username\",\n      name: \"username\",\n      onChange: this.handleChange,\n      value: this.state.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      type: \"password\",\n      label: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: this.state.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Login\")));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js"],"names":["React","withRouter","Button","Form","Segment","Message","LoginForm","Component","state","username","password","handleChange","e","name","value","setState","handleLoginSubmit","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","data","error_message","alert","localStorage","setItem","token","props","updateCurrentUser","user_data","render","authenticatingUser","failedLogin","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Form, Segment, Message } from \"semantic-ui-react\";\n\nclass LoginForm extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  //When form is submitted, make a fetch to \"log in the user\"\n  handleLoginSubmit = () => {\n    console.log(\"attempting to log in\");\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application.json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"response from the server\", data);\n        if (data.error_message) {\n          alert(data.error_message);\n        } else {\n          //successful log in\n          localStorage.setItem(\"token\", data.token);\n          this.props.updateCurrentUser(data.user_data);\n        }\n      });\n  };\n\n  render() {\n    return (\n      <Segment>\n        <Form\n          onSubmit={this.handleLoginSubmit}\n          size=\"mini\"\n          key=\"mini\"\n          loading={this.props.authenticatingUser}\n          error={this.props.failedLogin}\n        >\n          <Message\n            error\n            header={this.props.failedLogin ? this.props.error : null}\n          />\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              label=\"username\"\n              placeholder=\"username\"\n              name=\"username\"\n              onChange={this.handleChange}\n              value={this.state.username}\n            />\n            <Form.Input\n              type=\"password\"\n              label=\"password\"\n              placeholder=\"password\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </Form.Group>\n          <Button type=\"submit\">Login</Button>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}