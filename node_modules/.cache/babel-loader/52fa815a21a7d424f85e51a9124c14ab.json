{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup, setGroupBook } from \"../actions/group\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = a => {\n    props.setGroupBook(a);\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    console.log(\"((@#$@#$@#$@#$@#$\");\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(group => {\n      props.setGroup(group);\n      groupBooks = group.group_books;\n      groupUsers = group.users;\n    }).then(() => {\n      props.setGroupBooks(groupBooks);\n      props.setGroupUsers(groupUsers);\n    });\n  }, []);\n\n  if (props.groupBooks === null && props.groupUsers === null && props.group.users === undefined) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    debugger;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Welcome to \", props.group.name, \"!\"));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupBooks: group => dispatch(setGroupBooks(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setGroupBook: groupBook => dispatch(setGroupBook(groupBook))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js"],"names":["React","useState","useEffect","Button","Item","Grid","connect","withRouter","Link","setGroupBooks","setGroupUsers","setGroup","setGroupBook","GroupPage","props","handleGroupBookClick","a","groupBooks","groupUsers","console","log","wrongHostString","document","location","toString","rightHostString","replace","fetch","then","resp","json","group","group_books","users","undefined","name","mapStateToProps","state","groups","selectedGroupBook","groupBook","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport {\n  setGroupBooks,\n  setGroupUsers,\n  setGroup,\n  setGroupBook,\n} from \"../actions/group\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = (a) => {\n    props.setGroupBook(a);\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    console.log(\"((@#$@#$@#$@#$@#$\");\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((group) => {\n        props.setGroup(group);\n        groupBooks = group.group_books;\n        groupUsers = group.users;\n      })\n      .then(() => {\n        props.setGroupBooks(groupBooks);\n        props.setGroupUsers(groupUsers);\n      });\n  }, []);\n\n  if (\n    props.groupBooks === null &&\n    props.groupUsers === null &&\n    props.group.users === undefined \n  ) {\n    return <h1>Loading...</h1>;\n  } else {\n    debugger;\n    return (\n      <div>\n        <h1>Welcome to {props.group.name}!</h1>\n        {/* {props.group.users.length === 1 ? (\n          <h3>{props.group.users.length} member</h3>\n        ) : (\n          <h3>{props.group.users.length} members</h3>\n        )}\n        <Button size=\"huge\" floated=\"right\">\n          Join Group\n        </Button>\n        <h1>{props.group.description}</h1>\n        {props.group.group_books ? (\n          <Item.Group divided>\n            {props.group.group_books.map((groupBook) => {\n              return (\n                <Item>\n                  <Link\n                    to=\"\"\n                    onClick={() => {\n                      handleGroupBookClick(groupBook);\n                    }}\n                  >\n                    <Item.Image size=\"small\" src={groupBook.book.thumbnail} />\n                  </Link>\n                  <Item.Content style={{ marginLeft: \"20px\" }}>\n                    <Link\n                      to=\"\"\n                      onClick={() => {\n                        handleGroupBookClick(groupBook);\n                      }}\n                    >\n                      <Item.Header>{groupBook.book.title}</Item.Header>\n                    </Link>\n                    <Item.Meta>\n                      <span>{groupBook.book.author}</span>\n                    </Item.Meta>\n                    <Item.Description>\n                      <p>{groupBook.status}</p>\n                    </Item.Description>\n                  </Item.Content>\n                </Item>\n              );\n            })}\n          </Item.Group>\n        ) : (\n          <h1>This group has no books added!</h1>\n        )} */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupBooks: (group) => dispatch(setGroupBooks(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setGroupBook: (groupBook) => dispatch(setGroupBook(groupBook)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupPage)\n);\n"]},"metadata":{},"sourceType":"module"}