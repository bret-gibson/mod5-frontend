{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/CreateGroupForm.js\";\nimport React, { useState } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\nimport { setGroup, setGroupUsers } from \"../actions/group\";\n\nfunction CreateGroupForm(props) {\n  const [input, setInput] = useState({\n    name: \"\",\n    description: \"\"\n  });\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: [e.target.value]\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/groups\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          name: input.name[0],\n          description: input.description[0],\n          public: true,\n          admin_user_id: props.user.id\n        }\n      })\n    }).then(res => res.json()).then(group => {\n      props.setGroup(group);\n    }).then(() => {\n      fetch(\"http://localhost:3000/group_users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: {\n            user_id: props.user.id,\n            group_id: props.group.id\n          }\n        })\n      });\n    }).then(() => {\n      props.setGroupUsers(props.group.users);\n      props.history.push(`/groups/${props.group.id}`);\n    });\n  };\n\n  const cardStyle = {\n    paddingLeft: \"30px\"\n  };\n  const formStyle = {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\"\n  };\n  const headerStyle = {\n    textAlign: \"center\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: cardStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: formStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    style: headerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Start Your Own Book Club!\")), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Club Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Name\",\n    name: \"name\",\n    type: \"text\",\n    onChange: handleChange,\n    value: input.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Club Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Description\",\n    name: \"description\",\n    type: \"text\",\n    onChange: handleChange,\n    value: input.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    value: \"Submit Group\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Create Club!\"))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n    group: state.groups.group\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupUsers: groupUsers => dispatch(setGroupUsers(groupUsers))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateGroupForm));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/CreateGroupForm.js"],"names":["React","useState","Card","Grid","Image","Button","Form","connect","withRouter","Link","Redirect","setGroup","setGroupUsers","CreateGroupForm","props","input","setInput","name","description","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","user","public","admin_user_id","id","then","res","json","group","user_id","group_id","users","history","push","cardStyle","paddingLeft","formStyle","paddingRight","headerStyle","textAlign","mapStateToProps","state","groups","mapDispatchToProps","dispatch","groupUsers"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\nimport { setGroup, setGroupUsers } from \"../actions/group\";\n\nfunction CreateGroupForm(props) {\n  const [input, setInput] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  const handleChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: [e.target.value],\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/groups\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          name: input.name[0],\n          description: input.description[0],\n          public: true,\n          admin_user_id: props.user.id,\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((group) => {\n        props.setGroup(group);\n      })\n      .then(() => {\n        fetch(\"http://localhost:3000/group_users\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            user: {\n              user_id: props.user.id,\n              group_id: props.group.id,\n            },\n          }),\n        });\n      })\n      .then(() => {\n        props.setGroupUsers(props.group.users);\n        props.history.push(`/groups/${props.group.id}`);\n      });\n  };\n\n  const cardStyle = {\n    paddingLeft: \"30px\",\n  };\n\n  const formStyle = {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n  };\n\n  const headerStyle = {\n    textAlign: \"center\",\n  };\n  return (\n    <div style={cardStyle}>\n      <Card style={formStyle}>\n        <Card.Content style={headerStyle}>\n          <b>Start Your Own Book Club!</b>\n        </Card.Content>\n        <Form>\n          <Form.Field>\n            <label>Club Name</label>\n            <input\n              placeholder=\"Name\"\n              name=\"name\"\n              type=\"text\"\n              onChange={handleChange}\n              value={input.name}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Club Description</label>\n            <input\n              placeholder=\"Description\"\n              name=\"description\"\n              type=\"text\"\n              onChange={handleChange}\n              value={input.description}\n            />\n          </Form.Field>\n          {/* <Link to={`/groups/${props.group.id}`}> */}\n          <Button type=\"submit\" value=\"Submit Group\" onClick={handleSubmit}>\n            Create Club!\n          </Button>\n          {/* </Link> */}\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n    group: state.groups.group,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupUsers: (groupUsers) => dispatch(setGroupUsers(groupUsers)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CreateGroupForm)\n);\n"]},"metadata":{},"sourceType":"module"}