{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup, setGroupBook } from \"../actions/group\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = a => {\n    props.setGroupBook(groupBook);\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(group => {\n      props.setGroup(group);\n      groupBooks = group.group_books;\n      groupUsers = group.group_users;\n    }).then(() => {\n      props.setGroupBooks(groupBooks);\n      props.setGroupUsers(groupUsers);\n    });\n  }, []);\n\n  if (props.groupBooks === null && props.groupUsers === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Welcome to \", props.group.name, \"!\"), /*#__PURE__*/React.createElement(Button, {\n      size: \"huge\",\n      floated: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Join Group\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, props.group.description), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, props.group.group_books.status), /*#__PURE__*/React.createElement(Item.Group, {\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, props.groupBooks.map(groupBook => {\n      return /*#__PURE__*/React.createElement(Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"\",\n        onClick: handleGroupBookClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Item.Image, {\n        size: \"small\",\n        src: groupBook.book.thumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Item.Content, {\n        style: {\n          marginLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Item.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, groupBook.book.title)), /*#__PURE__*/React.createElement(Item.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, groupBook.book.author)), /*#__PURE__*/React.createElement(Item.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, groupBook.status))));\n    })));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupBooks: group => dispatch(setGroupBooks(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setGroupBook: groupBook => dispatch(setGroupBook(groupBook))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js"],"names":["React","useState","useEffect","Button","Item","Grid","connect","withRouter","Link","setGroupBooks","setGroupUsers","setGroup","setGroupBook","GroupPage","props","handleGroupBookClick","a","groupBook","groupBooks","groupUsers","wrongHostString","document","location","toString","rightHostString","replace","fetch","then","resp","json","group","group_books","group_users","name","description","status","map","book","thumbnail","marginLeft","title","author","mapStateToProps","state","groups","selectedGroupBook","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport {\n  setGroupBooks,\n  setGroupUsers,\n  setGroup,\n  setGroupBook,\n} from \"../actions/group\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = (a) => {\n    props.setGroupBook(groupBook);\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((group) => {\n        props.setGroup(group);\n        groupBooks = group.group_books;\n        groupUsers = group.group_users;\n      })\n      .then(() => {\n        props.setGroupBooks(groupBooks);\n        props.setGroupUsers(groupUsers);\n      });\n  }, []);\n\n  if (props.groupBooks === null && props.groupUsers === null) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div>\n        <h1>Welcome to {props.group.name}!</h1>\n        <Button size=\"huge\" floated=\"right\">\n          Join Group\n        </Button>\n        <h1>{props.group.description}</h1>\n        <h1>{props.group.group_books.status}</h1>\n        <Item.Group divided>\n          {props.groupBooks.map((groupBook) => {\n            return (\n              <Item>\n                <Link to=\"\" onClick={handleGroupBookClick}>\n                  <Item.Image size=\"small\" src={groupBook.book.thumbnail} />\n                </Link>\n                <Item.Content style={{ marginLeft: \"20px\" }}>\n                  <Link to=\"\">\n                    <Item.Header>{groupBook.book.title}</Item.Header>\n                  </Link>\n                  <Item.Meta>\n                    <span>{groupBook.book.author}</span>\n                  </Item.Meta>\n                  <Item.Description>\n                    <p>{groupBook.status}</p>\n                  </Item.Description>\n                </Item.Content>\n              </Item>\n            );\n          })}\n        </Item.Group>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupBooks: (group) => dispatch(setGroupBooks(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setGroupBook: (groupBook) => dispatch(setGroupBook(groupBook)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupPage)\n);\n"]},"metadata":{},"sourceType":"module"}