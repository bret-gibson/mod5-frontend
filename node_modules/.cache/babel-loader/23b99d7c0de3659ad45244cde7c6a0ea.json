{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Grid, Header, Button, Form, Segment, Message } from \"semantic-ui-react\";\nimport { setCurrentUser, loginUser, authenticatingUser, failedLogin } from \"../actions/user\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const [input, setInput] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: [e.target.value]\n    });\n  }; //When form is submitted, make a fetch to \"log in the user\"\n\n\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: input.username,\n        password: input.password\n      })\n    }).then(res => res.json()).then(userData => {\n      console.log(\"response from the server\", userData);\n\n      if (userData.error_message) {\n        alert(userData.error_message);\n      } else {\n        localStorage.setItem(\"token\", userData.token);\n        localStorage.setItem(\"userId\", userData.user_data.id); //added this to store current user\n\n        props.setCurrentUser(userData.user_data); // this.props.changeLog()\n      }\n    }); // } else {\n    //   fetch(\"http://localhost:3000/users\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       user: {\n    //         username: this.state.username,\n    //         password: this.state.password,\n    //         password_confirmation: this.state.password_confirmation,\n    //         fullname: this.state.fullname,\n    //         bio: this.state.bio,\n    //         profile_pic: this.state.image_url,\n    //       },\n    //     }),\n    //   })\n    //     .then((res) => res.json())\n    //     .then((userData) => {\n    //       console.log(\"response from the server\", userData);\n    //       if (userData.error_message) {\n    //         alert(\"There are errors in the form, fix them\");\n    //       } else {\n    //         // debugger\n    //         localStorage.setItem(\"token\", userData.token);\n    //         // localStorage.setItem(\"userId\", userData.user_data.id)   //added this to store current user\n    //         this.props.updateCurrentUser(userData.user_data.user);\n    //         // this.props.changeLog()\n    //       }\n    //     });\n    // }\n\n    console.log(\"attempting to log in\");\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    color: \"teal\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/static/images/logo.png\",\n    alt: \"logo\",\n    className: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), \" \", \"Log-in to your account\"), /*#__PURE__*/React.createElement(Form, {\n    size: \"large\",\n    onSubmit: handleLoginSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Username\",\n    name: \"username\",\n    value: input.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    value: input.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: handleLoginSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"New here?\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"tiny\",\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Sign up!\")))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: userData => dispatch(setCurrentUser(userData)),\n    authenticatingUser: () => dispatch(authenticatingUser()),\n    failedLogin: () => dispatch(failedLogin())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginForm));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js"],"names":["React","useState","withRouter","Grid","Header","Button","Form","Segment","Message","setCurrentUser","loginUser","authenticatingUser","failedLogin","compose","connect","Link","LoginForm","props","input","setInput","username","password","handleChange","e","target","name","value","handleLoginSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","userData","console","log","error_message","alert","localStorage","setItem","token","user_data","id","maxWidth","marginLeft","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport {\n  Grid,\n  Header,\n  Button,\n  Form,\n  Segment,\n  Message,\n} from \"semantic-ui-react\";\nimport {\n  setCurrentUser,\n  loginUser,\n  authenticatingUser,\n  failedLogin,\n} from \"../actions/user\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const [input, setInput] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: [e.target.value],\n    });\n  };\n\n  //When form is submitted, make a fetch to \"log in the user\"\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: input.username,\n        password: input.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((userData) => {\n        console.log(\"response from the server\", userData);\n        if (userData.error_message) {\n          alert(userData.error_message);\n        } else {\n          localStorage.setItem(\"token\", userData.token);\n          localStorage.setItem(\"userId\", userData.user_data.id); //added this to store current user\n          props.setCurrentUser(userData.user_data);\n          // this.props.changeLog()\n        }\n      });\n    // } else {\n    //   fetch(\"http://localhost:3000/users\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //     body: JSON.stringify({\n    //       user: {\n    //         username: this.state.username,\n    //         password: this.state.password,\n    //         password_confirmation: this.state.password_confirmation,\n    //         fullname: this.state.fullname,\n    //         bio: this.state.bio,\n    //         profile_pic: this.state.image_url,\n    //       },\n    //     }),\n    //   })\n    //     .then((res) => res.json())\n    //     .then((userData) => {\n    //       console.log(\"response from the server\", userData);\n    //       if (userData.error_message) {\n    //         alert(\"There are errors in the form, fix them\");\n    //       } else {\n    //         // debugger\n    //         localStorage.setItem(\"token\", userData.token);\n    //         // localStorage.setItem(\"userId\", userData.user_data.id)   //added this to store current user\n\n    //         this.props.updateCurrentUser(userData.user_data.user);\n    //         // this.props.changeLog()\n    //       }\n    //     });\n    // }\n    console.log(\"attempting to log in\");\n  };\n\n  return (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <img src=\"/static/images/logo.png\" alt=\"logo\" className=\"image\" />{\" \"}\n          Log-in to your account\n        </Header>\n        <Form size=\"large\" onSubmit={handleLoginSubmit}>\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={input.username}\n              onChange={handleChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={input.password}\n              onChange={handleChange}\n            />\n            <Button color=\"teal\" fluid size=\"large\" onClick={handleLoginSubmit}>\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New here?\n          <Link to=\"/create-account\">\n            <Button size=\"tiny\" style={{ marginLeft: \"15px\" }}>\n              Sign up!\n            </Button>\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (userData) => dispatch(setCurrentUser(userData)),\n    authenticatingUser: () => dispatch(authenticatingUser()),\n    failedLogin: () => dispatch(failedLogin()),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n);\n"]},"metadata":{},"sourceType":"module"}