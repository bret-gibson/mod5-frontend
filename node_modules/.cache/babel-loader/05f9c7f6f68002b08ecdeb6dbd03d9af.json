{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookDiscussionPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid, Image, Comment, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\nimport PostForm from \"./PostForm\";\nimport Post from \"./Post\";\n\nfunction BookDiscussionPage(props) {\n  const [postToggle, setPostToggle] = useState(false); //   useEffect(() => {\n  //     //   let wrongHostString = document.location.toString();\n  //     //   let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n  //     fetch(`http://localhost:3000/group_books/${props.groupBook.id}`)\n  //       .then((resp) => resp.json())\n  //       .then((groupBook) => {\n  //         props.setBookPosts(groupBook.posts);\n  //       });\n  //   }, []);\n\n  const handlePostButtonToggle = e => {\n    setPostToggle(!postToggle);\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n    props.groupUsers.forEach(user => {\n      if (user.id === props.user.id) {\n        userInGroup = true;\n      }\n    });\n    return userInGroup;\n  };\n\n  if (props.groupBook === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: props.groupBook.book.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Title: \", props.groupBook.book.title), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Author: \", props.groupBook.book.author), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Summary: \", props.groupBook.book.summary), /*#__PURE__*/React.createElement(Comment.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      dividing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Open Post Form\"), isUserInGroup() && postToggle ? /*#__PURE__*/React.createElement(PostForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 44\n      }\n    }) : null, props.posts.map(post => {\n      //   return <p>{post.content}</p>;\n      return /*#__PURE__*/React.createElement(Post, {\n        post: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }\n      });\n    })));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setBookPosts: posts => dispatch(setBookPosts(posts))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BookDiscussionPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookDiscussionPage.js"],"names":["React","useState","useEffect","Button","Item","Grid","Image","Comment","Header","connect","withRouter","Link","setGroupBooks","setGroupUsers","setGroup","setBookPosts","PostForm","Post","BookDiscussionPage","props","postToggle","setPostToggle","handlePostButtonToggle","e","isUserInGroup","userInGroup","groupUsers","forEach","user","id","groupBook","book","thumbnail","title","author","summary","posts","map","post","mapStateToProps","state","group","groups","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid, Image, Comment, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\n\nimport PostForm from \"./PostForm\";\nimport Post from \"./Post\";\n\nfunction BookDiscussionPage(props) {\n  const [postToggle, setPostToggle] = useState(false);\n  //   useEffect(() => {\n  //     //   let wrongHostString = document.location.toString();\n  //     //   let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n  //     fetch(`http://localhost:3000/group_books/${props.groupBook.id}`)\n  //       .then((resp) => resp.json())\n  //       .then((groupBook) => {\n  //         props.setBookPosts(groupBook.posts);\n  //       });\n  //   }, []);\n\n  const handlePostButtonToggle = (e) => {\n    setPostToggle(!postToggle);\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n    props.groupUsers.forEach((user) => {\n      if (user.id === props.user.id) {\n        userInGroup = true;\n      }\n    });\n    return userInGroup;\n  };\n\n  if (props.groupBook === null) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div>\n        <Image src={props.groupBook.book.thumbnail}></Image>\n        <h1>Title: {props.groupBook.book.title}</h1>\n        <h3>Author: {props.groupBook.book.author}</h3>\n        <h3>Summary: {props.groupBook.book.summary}</h3>\n        {/* <h3>Discussion: </h3> */}\n        <Comment.Group>\n          <Header as=\"h3\" dividing>\n            Posts\n          </Header>\n          <Button>Open Post Form</Button>\n          {isUserInGroup() && postToggle ? <PostForm /> : null}\n\n          {props.posts.map((post) => {\n            //   return <p>{post.content}</p>;\n            return <Post post={post} />;\n          })}\n        </Comment.Group>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n    posts: state.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BookDiscussionPage)\n);\n"]},"metadata":{},"sourceType":"module"}