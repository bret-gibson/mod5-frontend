{"ast":null,"code":"import React, { useState } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nfunction CreateGroupForm(props) {\n  const [input, setInput] = useState({\n    search: \"\"\n  });\n\n  const handleSubmit = () => {\n    fetch(\"http://localhost:3000/groups\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          name: input.name,\n          description: input.description,\n          public: true,\n          admin_user_id: props.user.id\n        }\n      })\n    }).then(res => res.json()).then(userData => {\n      console.log(\"response from the server\", userData);\n\n      if (userData.error_message) {\n        alert(\"There are errors in the form, fix them\");\n      } else {\n        // debugger\n        localStorage.setItem(\"token\", userData.token); // localStorage.setItem(\"userId\", userData.user_data.id)   //added this to store current user\n\n        this.props.setCurrentUser(userData.user_data.user);\n      }\n    });\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateGroupForm));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/CreateGroupForm.js"],"names":["React","useState","Card","Grid","Image","Button","Form","connect","withRouter","Link","CreateGroupForm","props","input","setInput","search","handleSubmit","fetch","method","headers","body","JSON","stringify","user","name","description","public","admin_user_id","id","then","res","json","userData","console","log","error_message","alert","localStorage","setItem","token","setCurrentUser","user_data","mapStateToProps","state","mapDispatchToProps","dispatch","setGroup","group"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,IAApC,QAAgD,mBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC;AACjCa,IAAAA,MAAM,EAAE;AADyB,GAAD,CAAlC;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF2B;AAKpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,EAAEX,KAAK,CAACW,IADR;AAEJC,UAAAA,WAAW,EAAEZ,KAAK,CAACY,WAFf;AAGJC,UAAAA,MAAM,EAAE,IAHJ;AAIJC,UAAAA,aAAa,EAAEf,KAAK,CAACW,IAAN,CAAWK;AAJtB;AADa,OAAf;AAL8B,KAAjC,CAAL,CAcGC,IAdH,CAcSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAdjB,EAeGF,IAfH,CAeSG,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,QAAxC;;AACA,UAAIA,QAAQ,CAACG,aAAb,EAA4B;AAC1BC,QAAAA,KAAK,CAAC,wCAAD,CAAL;AACD,OAFD,MAEO;AACL;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACO,KAAvC,EAFK,CAGL;;AAEA,aAAK3B,KAAL,CAAW4B,cAAX,CAA0BR,QAAQ,CAACS,SAAT,CAAmBlB,IAA7C;AACD;AACF,KA1BH;AA2BD,GA5BD;AA6BD;;AAED,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLpB,IAAAA,IAAI,EAAEoB,KAAK,CAACpB,IAAN,CAAWA;AADZ,GAAP;AAGD,CAJD;;AAMA,MAAMqB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,QAAQ,EAAGC,KAAD,IAAWF,QAAQ,CAACC,QAAQ,CAACC,KAAD,CAAT;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAetC,UAAU,CACvBD,OAAO,CAACkC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjC,eAA7C,CADuB,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nfunction CreateGroupForm(props) {\n  const [input, setInput] = useState({\n    search: \"\",\n  });\n\n  const handleSubmit = () => {\n    fetch(\"http://localhost:3000/groups\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          name: input.name,\n          description: input.description,\n          public: true,\n          admin_user_id: props.user.id,\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((userData) => {\n        console.log(\"response from the server\", userData);\n        if (userData.error_message) {\n          alert(\"There are errors in the form, fix them\");\n        } else {\n          // debugger\n          localStorage.setItem(\"token\", userData.token);\n          // localStorage.setItem(\"userId\", userData.user_data.id)   //added this to store current user\n\n          this.props.setCurrentUser(userData.user_data.user);\n        }\n      });\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CreateGroupForm)\n);\n"]},"metadata":{},"sourceType":"module"}