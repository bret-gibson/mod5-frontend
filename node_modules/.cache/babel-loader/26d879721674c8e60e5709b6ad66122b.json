{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Comment } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction Post(props) {\n  if (props.user.id === props.post.user.id) {\n    return /*#__PURE__*/React.createElement(Comment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }\n    }, props.post.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, props.post.created_at)), /*#__PURE__*/React.createElement(Comment.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, props.post.content), /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Action, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(Comment.Action, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, \"Delete Post\")))) //   <div>\n    //     <h4>{props.post.user.username} says...</h4>\n    //     <p style={{ display: \"inline-block\", paddingBottom: \"10px\" }}>\n    //       {props.post.content}\n    //     </p>\n    //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n    //       Edit Post\n    //     </Button>\n    //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n    //       Delete Post\n    //     </Button>\n    //   </div>\n    ;\n  } else {\n    return (\n      /*#__PURE__*/\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p>{props.post.content}</p>\n      //   </div>\n      React.createElement(Comment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Author, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, props.post.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, moment(props.post.created_at).format(\"MMMM Do YYYY, h:mm:ss a\"))), /*#__PURE__*/React.createElement(Comment.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, props.post.content)))\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers\n  };\n}; // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n//   };\n// };\n\n\nexport default withRouter(connect(mapStateToProps, null)(Post));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/Post.js"],"names":["React","useState","useEffect","Button","Comment","withRouter","connect","Post","props","user","id","post","username","created_at","content","color","moment","format","mapStateToProps","state","group","groups","groupBook","groupUsers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Comment } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction Post(props) {\n  if (props.user.id === props.post.user.id) {\n    return (\n      <Comment>\n        <Comment.Content>\n          <Comment.Author as=\"a\">{props.post.user.username}</Comment.Author>\n          <Comment.Metadata>\n            <div>{props.post.created_at}</div>\n          </Comment.Metadata>\n          <Comment.Text>{props.post.content}</Comment.Text>\n          <Comment.Actions>\n            <Comment.Action>Edit Post</Comment.Action>\n            <Comment.Action style={{ color: \"red\" }}>\n              Delete Post\n            </Comment.Action>\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p style={{ display: \"inline-block\", paddingBottom: \"10px\" }}>\n      //       {props.post.content}\n      //     </p>\n      //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n      //       Edit Post\n      //     </Button>\n      //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n      //       Delete Post\n      //     </Button>\n      //   </div>\n    );\n  } else {\n    return (\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p>{props.post.content}</p>\n      //   </div>\n      <Comment>\n        <Comment.Content>\n          <Comment.Author as=\"a\">{props.post.user.username}</Comment.Author>\n          <Comment.Metadata>\n            <div>\n              {moment(props.post.created_at).format(\"MMMM Do YYYY, h:mm:ss a\")}\n            </div>\n          </Comment.Metadata>\n          <Comment.Text>{props.post.content}</Comment.Text>\n          {/* <Comment.Actions>\n            <Comment.Action>Edit Post</Comment.Action>\n            <Comment.Action style={{ fontColor: \"red\" }}>\n              Delete Post\n            </Comment.Action>\n          </Comment.Actions> */}\n        </Comment.Content>\n      </Comment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n//   };\n// };\n\nexport default withRouter(connect(mapStateToProps, null)(Post));\n"]},"metadata":{},"sourceType":"module"}