{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/ProfilePage.js\";\nimport React, { useEffect } from \"react\";\nimport { Button, Item, Grid, Card, ItemContent, ItemDescription } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBook } from \"../actions/group\";\nimport { setSelectedUser } from \"../actions/user\";\n\nfunction ProfilePage(props) {\n  const handleGroupBookClick = groupBook => {\n    props.setGroupBook(groupBook);\n  };\n\n  useEffect(() => {\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(userData => {\n      debugger;\n      props.setSelectedUser(userData);\n    });\n  }, []);\n\n  if (props.selectedUser) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, props.user.selectedUser.username, \"'s Profile\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Member of:\"), /*#__PURE__*/React.createElement(Item.Group, {\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, props.user.selectedUser.groups.map(userGroup => {\n      return /*#__PURE__*/React.createElement(Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/groups/${userGroup.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Item.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, userGroup.name))), /*#__PURE__*/React.createElement(Item.Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, userGroup.description), /*#__PURE__*/React.createElement(ItemDescription, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, userGroup.books.map(book => {\n        return /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }\n        }, book.title);\n      })));\n    })));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    // userGroups: state.user.userGroups,\n    // user: state.user.user,\n    selectedUser: state.user.selectedUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroupBook: group => dispatch(setGroupBook(group)),\n    setSelectedUser: user => dispatch(setSelectedUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfilePage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/ProfilePage.js"],"names":["React","useEffect","Button","Item","Grid","Card","ItemContent","ItemDescription","connect","withRouter","Link","setGroupBook","setSelectedUser","ProfilePage","props","handleGroupBookClick","groupBook","wrongHostString","document","location","toString","rightHostString","replace","fetch","then","resp","json","userData","selectedUser","user","username","groups","map","userGroup","id","name","description","books","book","title","mapStateToProps","state","mapDispatchToProps","dispatch","group"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,eANF,QAOO,mBAPP;AAQA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,iBAAhC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,oBAAoB,GAAIC,SAAD,IAAe;AAC1CF,IAAAA,KAAK,CAACH,YAAN,CAAmBK,SAAnB;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,eAAe,GAAGC,QAAQ,CAACC,QAAT,CAAkBC,QAAlB,EAAtB;AACA,QAAIC,eAAe,GAAGJ,eAAe,CAACK,OAAhB,CAAwB,MAAxB,EAAgC,MAAhC,CAAtB;AACAC,IAAAA,KAAK,CAACF,eAAD,CAAL,CACGG,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,QAAD,IAAc;AAClB;AACAb,MAAAA,KAAK,CAACF,eAAN,CAAsBe,QAAtB;AACD,KALH;AAMD,GATQ,EASN,EATM,CAAT;;AAWA,MAAIb,KAAK,CAACc,YAAV,EAAwB;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,KAAK,CAACe,IAAN,CAAWD,YAAX,CAAwBE,QAA7B,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhB,KAAK,CAACe,IAAN,CAAWD,YAAX,CAAwBG,MAAxB,CAA+BC,GAA/B,CAAoCC,SAAD,IAAe;AACjD,0BACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUA,SAAS,CAACC,EAAG,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,SAAS,CAACE,IAAf,CADF,CADF,CADF,eAME,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYF,SAAS,CAACG,WAAtB,CANF,eAOE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,SAAS,CAACI,KAAV,CAAgBL,GAAhB,CAAqBM,IAAD,IAAU;AAC7B,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACC,KAAV,CAAP;AACD,OAFA,CADH,CAPF,CADF;AAeD,KAhBA,CADH,CAHF,CADF;AAyBD;AACF;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL;AACA;AACAb,IAAAA,YAAY,EAAEa,KAAK,CAACZ,IAAN,CAAWD;AAHpB,GAAP;AAKD,CAND;;AAQA,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLhC,IAAAA,YAAY,EAAGiC,KAAD,IAAWD,QAAQ,CAAChC,YAAY,CAACiC,KAAD,CAAb,CAD5B;AAELhC,IAAAA,eAAe,EAAGiB,IAAD,IAAUc,QAAQ,CAAC/B,eAAe,CAACiB,IAAD,CAAhB;AAF9B,GAAP;AAID,CALD;;AAOA,eAAepB,UAAU,CACvBD,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7B,WAA7C,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Button,\n  Item,\n  Grid,\n  Card,\n  ItemContent,\n  ItemDescription,\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBook } from \"../actions/group\";\nimport { setSelectedUser } from \"../actions/user\";\n\nfunction ProfilePage(props) {\n  const handleGroupBookClick = (groupBook) => {\n    props.setGroupBook(groupBook);\n  };\n\n  useEffect(() => {\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((userData) => {\n        debugger;\n        props.setSelectedUser(userData);\n      });\n  }, []);\n\n  if (props.selectedUser) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div>\n        <h1>{props.user.selectedUser.username}'s Profile</h1>\n        <h3>Member of:</h3>\n        <Item.Group divided>\n          {props.user.selectedUser.groups.map((userGroup) => {\n            return (\n              <Item>\n                <Link to={`/groups/${userGroup.id}`}>\n                  <Item.Header>\n                    <h1>{userGroup.name}</h1>\n                  </Item.Header>\n                </Link>\n                <Item.Meta>{userGroup.description}</Item.Meta>\n                <ItemDescription>\n                  {userGroup.books.map((book) => {\n                    return <h2>{book.title}</h2>;\n                  })}\n                </ItemDescription>\n              </Item>\n            );\n          })}\n        </Item.Group>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // userGroups: state.user.userGroups,\n    // user: state.user.user,\n    selectedUser: state.user.selectedUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroupBook: (group) => dispatch(setGroupBook(group)),\n    setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ProfilePage)\n);\n"]},"metadata":{},"sourceType":"module"}