{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setMostPopularBooks, setSearchedBooks } from \"../actions/book\";\nimport BookSearchItem from \"./BookSearchItem\";\n\nfunction BookSearchContainer(props) {\n  //   return this.props.user ? (\n  const [input, setInput] = useState({\n    search: \"\"\n  });\n  fetch(\"http://localhost:3000/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user: {\n        username: input.username,\n        password: input.password\n      }\n    })\n  }).then(res => res.json()).then(userData => {\n    console.log(\"response from the server\", userData);\n\n    if (userData.error_message) {\n      alert(\"There are errors in the form, fix them\");\n    } else {\n      // debugger\n      localStorage.setItem(\"token\", userData.token); // localStorage.setItem(\"userId\", userData.user_data.id)   //added this to store current user\n\n      this.props.setCurrentUser(userData.user_data.user);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/CreateGroupForm.js"],"names":["React","useState","useEffect","Card","Grid","Image","Button","Form","connect","useSelector","withRouter","setMostPopularBooks","setSearchedBooks","BookSearchItem","BookSearchContainer","props","input","setInput","search","fetch","method","headers","body","JSON","stringify","user","username","password","then","res","json","userData","console","log","error_message","alert","localStorage","setItem","token","setCurrentUser","user_data"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,IAApC,QAAgD,mBAAhD;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,iBAAtD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC;AACjCiB,IAAAA,MAAM,EAAE;AADyB,GAAD,CAAlC;AAIAC,EAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnCC,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF0B;AAKnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAEV,KAAK,CAACU,QADZ;AAEJC,QAAAA,QAAQ,EAAEX,KAAK,CAACW;AAFZ;AADa,KAAf;AAL6B,GAAhC,CAAL,CAYGC,IAZH,CAYSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZjB,EAaGF,IAbH,CAaSG,QAAD,IAAc;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,QAAxC;;AACA,QAAIA,QAAQ,CAACG,aAAb,EAA4B;AAC1BC,MAAAA,KAAK,CAAC,wCAAD,CAAL;AACD,KAFD,MAEO;AACL;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,QAAQ,CAACO,KAAvC,EAFK,CAGL;;AAEA,WAAKvB,KAAL,CAAWwB,cAAX,CAA0BR,QAAQ,CAACS,SAAT,CAAmBf,IAA7C;AACD;AACF,GAxBH;AAyBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setMostPopularBooks, setSearchedBooks } from \"../actions/book\";\nimport BookSearchItem from \"./BookSearchItem\";\n\nfunction BookSearchContainer(props) {\n  //   return this.props.user ? (\n\n  const [input, setInput] = useState({\n    search: \"\",\n  });\n\n  fetch(\"http://localhost:3000/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      user: {\n        username: input.username,\n        password: input.password,\n      },\n    }),\n  })\n    .then((res) => res.json())\n    .then((userData) => {\n      console.log(\"response from the server\", userData);\n      if (userData.error_message) {\n        alert(\"There are errors in the form, fix them\");\n      } else {\n        // debugger\n        localStorage.setItem(\"token\", userData.token);\n        // localStorage.setItem(\"userId\", userData.user_data.id)   //added this to store current user\n\n        this.props.setCurrentUser(userData.user_data.user);\n      }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}