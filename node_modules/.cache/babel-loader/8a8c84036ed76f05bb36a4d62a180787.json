{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookDiscussionPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid, Image, Comment, Header, Card } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\nimport PostForm from \"./PostForm\";\nimport Post from \"./Post\";\n\nfunction BookDiscussionPage(props) {\n  const [postToggle, setPostToggle] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Submit A Post\"); //   useEffect(() => {\n  //     //   let wrongHostString = document.location.toString();\n  //     //   let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n  //     fetch(`http://localhost:3000/group_books/${props.groupBook.id}`)\n  //       .then((resp) => resp.json())\n  //       .then((groupBook) => {\n  //         props.setBookPosts(groupBook.posts);\n  //       });\n  //   }, []);\n\n  const handlePostButtonToggle = e => {\n    setPostToggle(!postToggle);\n\n    if (buttonText === \"Submit A Post\") {\n      setButtonText(\"Close Post Form\");\n    } else {\n      setButtonText(\"Submit A Post\");\n    }\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n\n    if (props.user && props.groupUsers) {\n      props.groupUsers.forEach(user => {\n        if (user.id === props.user.id) {\n          userInGroup = true;\n        }\n      });\n    }\n\n    return userInGroup;\n  };\n\n  if (props.groupBook === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"50px\",\n        marginTop: \"25px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        props.history.goBack();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, props.group.name, \"'s Discussion for\"), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        display: \"inline-block\",\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: props.groupBook.book.thumbnail,\n      wrapped: true,\n      ui: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, props.groupBook.book.title), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, \"By: \", props.groupBook.book.author)))), /*#__PURE__*/React.createElement(Comment.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h3\",\n      dividing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Discussion\"), isUserInGroup() ? /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      onClick: handlePostButtonToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, buttonText) : null, postToggle ? /*#__PURE__*/React.createElement(PostForm, {\n      setPostToggle: setPostToggle,\n      setButtonText: setButtonText,\n      buttonText: buttonText,\n      postToggle: postToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }) : null, props.posts.length > 0 ? props.posts.map(post => {\n      //   return <p>{post.content}</p>;\n      return /*#__PURE__*/React.createElement(Post, {\n        post: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 22\n        }\n      });\n    }) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"There are no posts yet!\")));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setBookPosts: posts => dispatch(setBookPosts(posts))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BookDiscussionPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookDiscussionPage.js"],"names":["React","useState","useEffect","Button","Item","Grid","Image","Comment","Header","Card","connect","withRouter","Link","setGroupBooks","setGroupUsers","setGroup","setBookPosts","PostForm","Post","BookDiscussionPage","props","postToggle","setPostToggle","buttonText","setButtonText","handlePostButtonToggle","e","isUserInGroup","userInGroup","user","groupUsers","forEach","id","groupBook","marginLeft","marginTop","history","goBack","group","name","display","padding","book","thumbnail","title","author","posts","length","map","post","mapStateToProps","state","groups","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Item,\n  Grid,\n  Image,\n  Comment,\n  Header,\n  Card,\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\n\nimport PostForm from \"./PostForm\";\nimport Post from \"./Post\";\n\nfunction BookDiscussionPage(props) {\n  const [postToggle, setPostToggle] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Submit A Post\");\n\n  //   useEffect(() => {\n  //     //   let wrongHostString = document.location.toString();\n  //     //   let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n  //     fetch(`http://localhost:3000/group_books/${props.groupBook.id}`)\n  //       .then((resp) => resp.json())\n  //       .then((groupBook) => {\n  //         props.setBookPosts(groupBook.posts);\n  //       });\n  //   }, []);\n\n  const handlePostButtonToggle = (e) => {\n    setPostToggle(!postToggle);\n    if (buttonText === \"Submit A Post\") {\n      setButtonText(\"Close Post Form\");\n    } else {\n      setButtonText(\"Submit A Post\");\n    }\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n    if (props.user && props.groupUsers) {\n      props.groupUsers.forEach((user) => {\n        if (user.id === props.user.id) {\n          userInGroup = true;\n        }\n      });\n    }\n    return userInGroup;\n  };\n\n  if (props.groupBook === null) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div style={{ marginLeft: \"50px\", marginTop: \"25px\" }}>\n        <Button\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Back\n        </Button>\n        <h1>{props.group.name}'s Discussion for</h1>\n        <Card\n          style={{\n            display: \"inline-block\",\n            padding: \"20px\",\n          }}\n        >\n          <Image src={props.groupBook.book.thumbnail} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>{props.groupBook.book.title}</Card.Header>\n            <Card.Meta>\n              <span>By: {props.groupBook.book.author}</span>\n            </Card.Meta>\n          </Card.Content>\n        </Card>\n        {/* <div style={{ marginTop: \"10px\" }}>\n          <h2>{props.groupBook.book.title}</h2>\n        </div>\n        <div style={{ marginTop: \"10px\" }}>\n          <h4>By: {props.groupBook.book.author}</h4>\n        </div>\n        <Image src={props.groupBook.book.thumbnail}></Image>\n        <h4>Summary: {props.groupBook.book.summary}</h4> */}\n        <Comment.Group>\n          <Header as=\"h3\" dividing>\n            Discussion\n          </Header>\n          {isUserInGroup() ? (\n            <Button size=\"small\" onClick={handlePostButtonToggle}>\n              {buttonText}\n            </Button>\n          ) : null}\n          {postToggle ? (\n            <PostForm\n              setPostToggle={setPostToggle}\n              setButtonText={setButtonText}\n              buttonText={buttonText}\n              postToggle={postToggle}\n            />\n          ) : null}\n\n          {props.posts.length > 0 ? (\n            props.posts.map((post) => {\n              //   return <p>{post.content}</p>;\n              return <Post post={post} />;\n            })\n          ) : (\n            <h1>There are no posts yet!</h1>\n          )}\n        </Comment.Group>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n    posts: state.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BookDiscussionPage)\n);\n"]},"metadata":{},"sourceType":"module"}