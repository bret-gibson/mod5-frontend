{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { Button, Item, Modal, Image, Card, Divider, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup, setGroupBook } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\nimport { setActiveBook } from \"../actions/activeBook\";\n\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => ++value); // update the state to force render\n}\n\nfunction GroupPage(props) {\n  const forceUpdate = useForceUpdate();\n  const [activeButtonText, setActiveButtonText] = useState(\"Set Book as Active\");\n  const [removeActiveButtonText, setRemoveActiveButtonText] = useState(\"Remove Active Status\");\n\n  const handleGroupBookClick = groupBook => {\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`).then(resp => resp.json()).then(groupBookData => {\n      props.setGroupBook(groupBookData);\n      props.setBookPosts(groupBookData.posts);\n    }).then(() => {\n      props.history.push(`/group_books/${groupBook.id}`);\n    });\n  };\n\n  const handleActiveRemove = groupBook => {\n    props.setActiveBook(null);\n    setRemoveActiveButtonText(\"Set Book as Active\"); // if (removeActiveButtonText === \"Remove Active Status\") {\n    //   setRemoveActiveButtonText(\"Set Book as Active\");\n    // } else {\n    //   setRemoveActiveButtonText(\"Remove Active Status\");\n    // }\n\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        active: false\n      })\n    });\n  };\n\n  const handleSetActive = groupBook => {\n    props.setActiveBook(groupBook);\n    setActiveButtonText(\"Remove Active Status\"); // if (activeButtonText === \"Set Book as Active\") {\n    //   setActiveButtonText(\"Remove Active Status\");\n    // } else {\n    //   setActiveButtonText(\"Set Book as Active\");\n    // }\n\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        active: true\n      })\n    });\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n\n    if (props.user) {\n      props.group.users.forEach(user => {\n        if (user.id === props.user.id) {\n          userInGroup = true;\n        }\n      });\n    }\n\n    return userInGroup;\n  };\n\n  const handleGroupJoin = e => {\n    fetch(\"http://localhost:3000/group_users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          user_id: props.user.id,\n          group_id: props.group.id\n        }\n      })\n    }).then(() => {\n      fetch(`http://localhost:3000/groups/${props.group.id}`).then(resp => resp.json()).then(groupData => {\n        props.setGroupUsers(groupData);\n      });\n    });\n    useForceUpdate();\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let activeBook = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(group => {\n      props.setGroup(group); // props.setGroupUsers(group.users);\n\n      groupBooks = group.group_books; // activeBook = groupBooks.find((book) => {\n      //   return book.active === true;\n      // });\n\n      groupBooks.forEach(book => {\n        if (book.active === true) {\n          activeBook = book;\n        }\n      });\n      groupUsers = group.users;\n    }).then(() => {\n      props.setGroupBooks(groupBooks);\n      props.setGroupUsers(groupUsers);\n\n      if (activeBook) {\n        props.setActiveBook(activeBook);\n      }\n    });\n  }, []);\n\n  if (props.groupBooks === null && props.groupUsers === null && props.group === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"50px\",\n        marginTop: \"25px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginBottom: \"10px\"\n      },\n      onClick: () => {\n        props.history.goBack();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, \"Back\"), /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Welcome to \", props.group.name), props.group.users.length === 1 && props.group.users.length !== 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, props.group.users.length, \" member\") : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, props.group.users.length, \" members\"), /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        marginBottom: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"Group Description:\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: \"0px\",\n        fontSize: \"16px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }, props.group.description), isUserInGroup() ? /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginTop: \"20px\"\n      },\n      disabled: true,\n      size: \"huge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, \"Already a member\") : /*#__PURE__*/React.createElement(Modal, {\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginTop: \"20px\"\n        },\n        onClick: handleGroupJoin,\n        size: \"huge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }, \"Join Group\"),\n      closeIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"Club Joined\"), /*#__PURE__*/React.createElement(Modal.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Description, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, \"You have joined \", props.group.name, \"!\")))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, props.activeBook === null ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, \"This group has no active book!\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, \"This Club Is Currently Reading\"), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        display: \"inline-block\",\n        padding: \"20px\"\n      },\n      onClick: () => {\n        handleGroupBookClick(props.activeBook);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      size: \"mini\",\n      src: props.activeBook.book.thumbnail,\n      wrapped: true,\n      ui: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, props.activeBook.book.title), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 27\n      }\n    }, \"By: \", props.activeBook.book.author))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, \"All Book Discussions\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    })), props.groupBooks ? /*#__PURE__*/React.createElement(Item.Group, {\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, props.groupBooks.map(groupBook => {\n      return /*#__PURE__*/React.createElement(Item, {\n        key: groupBook.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Item.Image, {\n        onClick: () => {\n          handleGroupBookClick(groupBook);\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: `/group_books/${groupBook.id}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 30\n            }\n          });\n        },\n        size: \"small\",\n        src: groupBook.book.thumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Item.Content, {\n        style: {\n          marginLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Item.Header, {\n        onClick: () => {\n          handleGroupBookClick(groupBook);\n        },\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }\n      }, groupBook.book.title), /*#__PURE__*/React.createElement(Item.Meta, {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 23\n        }\n      }, groupBook.book.author)), isUserInGroup() ? groupBook.active ? /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          handleActiveRemove(groupBook);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }\n      }, removeActiveButtonText) : /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          handleSetActive(groupBook);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, activeButtonText) : null));\n    })) : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }\n    }, \"This group has no books added!\"));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    user: state.user,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n    groupBook: state.groups.groupBook,\n    activeBook: state.activeBook\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupBooks: group => dispatch(setGroupBooks(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setGroupBook: groupBook => dispatch(setGroupBook(groupBook)),\n    setBookPosts: posts => dispatch(setBookPosts(posts)),\n    setActiveBook: book => dispatch(setActiveBook(book))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js"],"names":["React","useState","useEffect","useReducer","Button","Item","Modal","Image","Card","Divider","Grid","connect","withRouter","Link","Redirect","setGroupBooks","setGroupUsers","setGroup","setGroupBook","setBookPosts","setActiveBook","useForceUpdate","value","setValue","GroupPage","props","forceUpdate","activeButtonText","setActiveButtonText","removeActiveButtonText","setRemoveActiveButtonText","handleGroupBookClick","groupBook","fetch","id","then","resp","json","groupBookData","posts","history","push","handleActiveRemove","method","headers","body","JSON","stringify","active","handleSetActive","isUserInGroup","userInGroup","user","group","users","forEach","handleGroupJoin","e","user_id","group_id","groupData","groupBooks","groupUsers","activeBook","wrongHostString","document","location","toString","rightHostString","replace","group_books","book","marginLeft","marginTop","color","marginBottom","goBack","name","length","fontSize","description","textAlign","display","padding","thumbnail","title","author","paddingTop","map","mapStateToProps","state","groups","selectedGroupBook","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport {\n  Button,\n  Item,\n  Modal,\n  Image,\n  Card,\n  Divider,\n  Grid,\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\nimport {\n  setGroupBooks,\n  setGroupUsers,\n  setGroup,\n  setGroupBook,\n} from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\nimport { setActiveBook } from \"../actions/activeBook\";\n\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue((value) => ++value); // update the state to force render\n}\nfunction GroupPage(props) {\n  const forceUpdate = useForceUpdate();\n\n  const [activeButtonText, setActiveButtonText] = useState(\n    \"Set Book as Active\"\n  );\n\n  const [removeActiveButtonText, setRemoveActiveButtonText] = useState(\n    \"Remove Active Status\"\n  );\n\n  const handleGroupBookClick = (groupBook) => {\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`)\n      .then((resp) => resp.json())\n      .then((groupBookData) => {\n        props.setGroupBook(groupBookData);\n        props.setBookPosts(groupBookData.posts);\n      })\n      .then(() => {\n        props.history.push(`/group_books/${groupBook.id}`);\n      });\n  };\n\n  const handleActiveRemove = (groupBook) => {\n    props.setActiveBook(null);\n    setRemoveActiveButtonText(\"Set Book as Active\");\n    // if (removeActiveButtonText === \"Remove Active Status\") {\n    //   setRemoveActiveButtonText(\"Set Book as Active\");\n    // } else {\n    //   setRemoveActiveButtonText(\"Remove Active Status\");\n    // }\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        active: false,\n      }),\n    });\n  };\n\n  const handleSetActive = (groupBook) => {\n    props.setActiveBook(groupBook);\n    setActiveButtonText(\"Remove Active Status\");\n    // if (activeButtonText === \"Set Book as Active\") {\n    //   setActiveButtonText(\"Remove Active Status\");\n    // } else {\n    //   setActiveButtonText(\"Set Book as Active\");\n    // }\n\n    fetch(`http://localhost:3000/group_books/${groupBook.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        active: true,\n      }),\n    });\n  };\n\n  const isUserInGroup = () => {\n    let userInGroup = false;\n    if (props.user) {\n      props.group.users.forEach((user) => {\n        if (user.id === props.user.id) {\n          userInGroup = true;\n        }\n      });\n    }\n    return userInGroup;\n  };\n\n  const handleGroupJoin = (e) => {\n    fetch(\"http://localhost:3000/group_users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          user_id: props.user.id,\n          group_id: props.group.id,\n        },\n      }),\n    }).then(() => {\n      fetch(`http://localhost:3000/groups/${props.group.id}`)\n        .then((resp) => resp.json())\n        .then((groupData) => {\n          props.setGroupUsers(groupData);\n        });\n    });\n    useForceUpdate();\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    let activeBook = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((group) => {\n        props.setGroup(group);\n        // props.setGroupUsers(group.users);\n\n        groupBooks = group.group_books;\n        // activeBook = groupBooks.find((book) => {\n        //   return book.active === true;\n        // });\n        groupBooks.forEach((book) => {\n          if (book.active === true) {\n            activeBook = book;\n          }\n        });\n        groupUsers = group.users;\n      })\n      .then(() => {\n        props.setGroupBooks(groupBooks);\n        props.setGroupUsers(groupUsers);\n        if (activeBook) {\n          props.setActiveBook(activeBook);\n        }\n      });\n  }, []);\n  if (\n    props.groupBooks === null &&\n    props.groupUsers === null &&\n    props.group === null\n  ) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div style={{ marginLeft: \"50px\", marginTop: \"25px\", color: \"white\" }}>\n        <Button\n          style={{ marginBottom: \"10px\" }}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Back\n        </Button>\n        <Grid columns={2}>\n          <Grid.Row>\n            <Grid.Column width={6}>\n              <h1>Welcome to {props.group.name}</h1>\n              {props.group.users.length === 1 &&\n              props.group.users.length !== 0 ? (\n                <h3>{props.group.users.length} member</h3>\n              ) : (\n                <h3>{props.group.users.length} members</h3>\n              )}\n              <h3 style={{ marginBottom: \"5px\" }}>\n                <b>Group Description:</b>\n              </h3>\n              <p style={{ marginTop: \"0px\", fontSize: \"16px\" }}>\n                {props.group.description}\n              </p>\n              {isUserInGroup() ? (\n                <Button style={{ marginTop: \"20px\" }} disabled size=\"huge\">\n                  Already a member\n                </Button>\n              ) : (\n                <Modal\n                  trigger={\n                    <Button\n                      style={{ marginTop: \"20px\" }}\n                      onClick={handleGroupJoin}\n                      size=\"huge\"\n                    >\n                      Join Group\n                    </Button>\n                  }\n                  closeIcon\n                >\n                  <Modal.Header>Club Joined</Modal.Header>\n                  <Modal.Content>\n                    <Modal.Description>\n                      You have joined {props.group.name}!\n                    </Modal.Description>\n                  </Modal.Content>\n                </Modal>\n              )}\n            </Grid.Column>\n\n            <Grid.Column>\n              <div style={{ textAlign: \"center\" }}>\n                {props.activeBook === null ? (\n                  <h3>This group has no active book!</h3>\n                ) : (\n                  <div>\n                    <h3>This Club Is Currently Reading</h3>\n                    {/* <p>Click the card to view the discussion</p> */}\n\n                    <Card\n                      style={{ display: \"inline-block\", padding: \"20px\" }}\n                      onClick={() => {\n                        handleGroupBookClick(props.activeBook);\n                      }}\n                    >\n                      <Image\n                        size=\"mini\"\n                        src={props.activeBook.book.thumbnail}\n                        wrapped\n                        ui={false}\n                      />\n                      <Card.Content>\n                        <Card.Header>{props.activeBook.book.title}</Card.Header>\n                        <Card.Meta>\n                          <span>By: {props.activeBook.book.author}</span>\n                        </Card.Meta>\n                      </Card.Content>\n                    </Card>\n                  </div>\n                )}\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <div style={{ paddingTop: \"50px\" }}>\n          <h1>All Book Discussions</h1>\n          <Divider />\n        </div>\n        {props.groupBooks ? (\n          <Item.Group divided>\n            {props.groupBooks.map((groupBook) => {\n              return (\n                <Item key={groupBook.id}>\n                  {/* <Link\n                    to={``}\n                    onClick={() => {\n                      handleGroupBookClick(groupBook);\n                    }}\n                  > */}\n                  <Item.Image\n                    onClick={() => {\n                      handleGroupBookClick(groupBook);\n                      return <Redirect to={`/group_books/${groupBook.id}`} />;\n                    }}\n                    size=\"small\"\n                    src={groupBook.book.thumbnail}\n                  />\n                  {/* </Link> */}\n                  <Item.Content style={{ marginLeft: \"20px\" }}>\n                    {/* <Link\n                      to=\"\"\n                      onClick={() => {\n                        handleGroupBookClick(groupBook);\n                      }}\n                    > */}\n                    <Item.Header\n                      onClick={() => {\n                        handleGroupBookClick(groupBook);\n                      }}\n                      style={{ color: \"white\" }}\n                    >\n                      {groupBook.book.title}\n                    </Item.Header>\n                    <Item.Meta style={{ color: \"white\" }}>\n                      <span>{groupBook.book.author}</span>\n                    </Item.Meta>\n\n                    {isUserInGroup() ? (\n                      groupBook.active ? (\n                        <Button\n                          onClick={() => {\n                            handleActiveRemove(groupBook);\n                          }}\n                        >\n                          {removeActiveButtonText}\n                        </Button>\n                      ) : (\n                        <Button\n                          onClick={() => {\n                            handleSetActive(groupBook);\n                          }}\n                        >\n                          {activeButtonText}\n                        </Button>\n                      )\n                    ) : null}\n                  </Item.Content>\n                </Item>\n              );\n            })}\n          </Item.Group>\n        ) : (\n          <h1>This group has no books added!</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    user: state.user,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n    groupBook: state.groups.groupBook,\n    activeBook: state.activeBook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupBooks: (group) => dispatch(setGroupBooks(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setGroupBook: (groupBook) => dispatch(setGroupBook(groupBook)),\n    setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n    setActiveBook: (book) => dispatch(setActiveBook(book)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupPage)\n);\n"]},"metadata":{},"sourceType":"module"}