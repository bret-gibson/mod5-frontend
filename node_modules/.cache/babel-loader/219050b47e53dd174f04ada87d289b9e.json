{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookDiscussionPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid, Image } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\nimport PostForm from \"./PostForm\";\n\nfunction BookDiscussionPage(props) {\n  useEffect(() => {\n    //   let wrongHostString = document.location.toString();\n    //   let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(`http://localhost:3000/group_books/${props.groupBook.id}`).then(resp => resp.json()).then(groupBook => {\n      props.setBookPosts(groupBook.posts);\n    });\n  }, [props.posts]);\n\n  if (props.groupBook === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: props.groupBook.book.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Title: \", props.groupBook.book.title), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"Author: \", props.groupBook.book.author), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Summary: \", props.groupBook.book.summary), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Discussion: \"), /*#__PURE__*/React.createElement(PostForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setBookPosts: posts => dispatch(setBookPosts(posts))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(BookDiscussionPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookDiscussionPage.js"],"names":["React","useState","useEffect","Button","Item","Grid","Image","connect","withRouter","Link","setGroupBooks","setGroupUsers","setGroup","setBookPosts","PostForm","BookDiscussionPage","props","fetch","groupBook","id","then","resp","json","posts","book","thumbnail","title","author","summary","mapStateToProps","state","group","groups","groupUsers","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,mBAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjCd,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAe,IAAAA,KAAK,CAAE,qCAAoCD,KAAK,CAACE,SAAN,CAAgBC,EAAG,EAAzD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESF,SAAD,IAAe;AACnBF,MAAAA,KAAK,CAACH,YAAN,CAAmBK,SAAS,CAACK,KAA7B;AACD,KAJH;AAKD,GARQ,EAQN,CAACP,KAAK,CAACO,KAAP,CARM,CAAT;;AAUA,MAAIP,KAAK,CAACE,SAAN,KAAoB,IAAxB,EAA8B;AAC5B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEF,KAAK,CAACE,SAAN,CAAgBM,IAAhB,CAAqBC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYT,KAAK,CAACE,SAAN,CAAgBM,IAAhB,CAAqBE,KAAjC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaV,KAAK,CAACE,SAAN,CAAgBM,IAAhB,CAAqBG,MAAlC,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcX,KAAK,CAACE,SAAN,CAAgBM,IAAhB,CAAqBI,OAAnC,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD;AACF;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD,KADf;AAELb,IAAAA,SAAS,EAAEY,KAAK,CAACE,MAAN,CAAad,SAFnB;AAGLe,IAAAA,UAAU,EAAEH,KAAK,CAACE,MAAN,CAAaC,UAHpB;AAILV,IAAAA,KAAK,EAAEO,KAAK,CAACP;AAJR,GAAP;AAMD,CAPD;;AASA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLvB,IAAAA,QAAQ,EAAGmB,KAAD,IAAWI,QAAQ,CAACvB,QAAQ,CAACmB,KAAD,CAAT,CADxB;AAELpB,IAAAA,aAAa,EAAGoB,KAAD,IAAWI,QAAQ,CAACxB,aAAa,CAACoB,KAAD,CAAd,CAF7B;AAGLlB,IAAAA,YAAY,EAAGU,KAAD,IAAWY,QAAQ,CAACtB,YAAY,CAACU,KAAD,CAAb;AAH5B,GAAP;AAKD,CAND;;AAQA,eAAef,UAAU,CACvBD,OAAO,CAACsB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,kBAA7C,CADuB,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid, Image } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup } from \"../actions/group\";\nimport { setBookPosts } from \"../actions/post\";\n\nimport PostForm from \"./PostForm\";\n\nfunction BookDiscussionPage(props) {\n  useEffect(() => {\n    //   let wrongHostString = document.location.toString();\n    //   let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(`http://localhost:3000/group_books/${props.groupBook.id}`)\n      .then((resp) => resp.json())\n      .then((groupBook) => {\n        props.setBookPosts(groupBook.posts);\n      });\n  }, [props.posts]);\n\n  if (props.groupBook === null) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div>\n        <Image src={props.groupBook.book.thumbnail}></Image>\n        <h1>Title: {props.groupBook.book.title}</h1>\n        <h3>Author: {props.groupBook.book.author}</h3>\n        <h3>Summary: {props.groupBook.book.summary}</h3>\n        <h3>Discussion: </h3>\n        {/* {props.posts.map((post) => {\n          return <p>{post.content}</p>;\n        })} */}\n\n        <PostForm />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n    posts: state.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(BookDiscussionPage)\n);\n"]},"metadata":{},"sourceType":"module"}