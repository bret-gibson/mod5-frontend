{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Grid, Header, Button, Form, Segment, Message } from \"semantic-ui-react\";\nimport { setCurrentUser, loginUser, authenticatingUser, failedLogin } from \"../actions/user\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const [input, setInput] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: [e.target.value]\n    });\n  }; //When form is submitted, make a fetch to \"log in the user\"\n\n\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n\n    handleLoginSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.signIn) {\n        fetch(\"http://localhost:3000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          })\n        }).then(res => res.json()).then(userData => {\n          console.log(\"response from the server\", userData);\n\n          if (userData.error_message) {\n            alert(userData.error_message);\n          } else {\n            localStorage.setItem(\"token\", userData.token);\n            localStorage.setItem(\"userId\", userData.user_data.id); //added this to store current user\n\n            this.props.setCurrentUser(userData.user_data); // this.props.changeLog()\n          }\n        });\n      } else {\n        fetch(\"http://localhost:3000/users\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user: {\n              username: this.state.username,\n              password: this.state.password,\n              password_confirmation: this.state.password_confirmation,\n              fullname: this.state.fullname,\n              bio: this.state.bio,\n              profile_pic: this.state.image_url\n            }\n          })\n        }).then(res => res.json()).then(userData => {\n          console.log(\"response from the server\", userData);\n\n          if (userData.error_message) {\n            alert(\"There are errors in the form, fix them\");\n          } else {\n            // debugger\n            localStorage.setItem(\"token\", userData.token); // localStorage.setItem(\"userId\", userData.user_data.id)   //added this to store current user\n\n            this.props.updateCurrentUser(userData.user_data.user); // this.props.changeLog()\n          }\n        });\n      }\n\n      console.log(\"attempting to log in\");\n    };\n  };\n\n  return (\n    /*#__PURE__*/\n    //   <Segment>\n    //     <Form\n    //       onSubmit={this.handleLoginSubmit}\n    //       size=\"mini\"\n    //       key=\"mini\"\n    //       loading={this.props.authenticatingUser}\n    //       error={this.props.failedLogin}\n    //     >\n    //       <Message\n    //         error\n    //         header={this.props.failedLogin ? this.props.error : null}\n    //       />\n    //       <Form.Group widths=\"equal\">\n    //         <Form.Input\n    //           label=\"username\"\n    //           placeholder=\"username\"\n    //           name=\"username\"\n    //           onChange={this.handleChange}\n    //           value={this.state.username}\n    //         />\n    //         <Form.Input\n    //           type=\"password\"\n    //           label=\"password\"\n    //           placeholder=\"password\"\n    //           name=\"password\"\n    //           onChange={this.handleChange}\n    //           value={this.state.password}\n    //         />\n    //       </Form.Group>\n    //       <Button type=\"submit\">Login</Button>\n    //     </Form>\n    //   </Segment>\n    React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/static/images/logo.png\",\n      alt: \"logo\",\n      className: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), \" \", \"Log-in to your account\"), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: handleLoginSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      stacked: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"Username\",\n      name: \"username\",\n      value: input.username,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      value: input.password,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      onClick: handleLoginSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, \"Login\"))), /*#__PURE__*/React.createElement(Message, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, \"New here?\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/create-account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"tiny\",\n      style: {\n        marginLeft: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, \"Sign up!\")))))\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: userData => dispatch(setCurrentUser(userData)),\n    authenticatingUser: () => dispatch(authenticatingUser()),\n    failedLogin: () => dispatch(failedLogin())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginForm));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js"],"names":["React","useState","withRouter","Grid","Header","Button","Form","Segment","Message","setCurrentUser","loginUser","authenticatingUser","failedLogin","compose","connect","Link","LoginForm","props","input","setInput","username","password","handleChange","e","target","name","value","handleLoginSubmit","preventDefault","state","signIn","fetch","method","headers","body","JSON","stringify","then","res","json","userData","console","log","error_message","alert","localStorage","setItem","token","user_data","id","user","password_confirmation","fullname","bio","profile_pic","image_url","updateCurrentUser","maxWidth","marginLeft","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport {\n  Grid,\n  Header,\n  Button,\n  Form,\n  Segment,\n  Message,\n} from \"semantic-ui-react\";\nimport {\n  setCurrentUser,\n  loginUser,\n  authenticatingUser,\n  failedLogin,\n} from \"../actions/user\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const [input, setInput] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: [e.target.value],\n    });\n  };\n\n  //When form is submitted, make a fetch to \"log in the user\"\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    handleLoginSubmit = (e) => {\n      e.preventDefault();\n      if (this.state.signIn) {\n        fetch(\"http://localhost:3000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password,\n          }),\n        })\n          .then((res) => res.json())\n          .then((userData) => {\n            console.log(\"response from the server\", userData);\n            if (userData.error_message) {\n              alert(userData.error_message);\n            } else {\n              localStorage.setItem(\"token\", userData.token);\n              localStorage.setItem(\"userId\", userData.user_data.id); //added this to store current user\n              this.props.setCurrentUser(userData.user_data);\n              // this.props.changeLog()\n            }\n          });\n      } else {\n        fetch(\"http://localhost:3000/users\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            user: {\n              username: this.state.username,\n              password: this.state.password,\n              password_confirmation: this.state.password_confirmation,\n              fullname: this.state.fullname,\n              bio: this.state.bio,\n              profile_pic: this.state.image_url,\n            },\n          }),\n        })\n          .then((res) => res.json())\n          .then((userData) => {\n            console.log(\"response from the server\", userData);\n            if (userData.error_message) {\n              alert(\"There are errors in the form, fix them\");\n            } else {\n              // debugger\n              localStorage.setItem(\"token\", userData.token);\n              // localStorage.setItem(\"userId\", userData.user_data.id)   //added this to store current user\n\n              this.props.updateCurrentUser(userData.user_data.user);\n              // this.props.changeLog()\n            }\n          });\n      }\n      console.log(\"attempting to log in\");\n    };\n  };\n  return (\n    //   <Segment>\n    //     <Form\n    //       onSubmit={this.handleLoginSubmit}\n    //       size=\"mini\"\n    //       key=\"mini\"\n    //       loading={this.props.authenticatingUser}\n    //       error={this.props.failedLogin}\n    //     >\n    //       <Message\n    //         error\n    //         header={this.props.failedLogin ? this.props.error : null}\n    //       />\n    //       <Form.Group widths=\"equal\">\n    //         <Form.Input\n    //           label=\"username\"\n    //           placeholder=\"username\"\n    //           name=\"username\"\n    //           onChange={this.handleChange}\n    //           value={this.state.username}\n    //         />\n    //         <Form.Input\n    //           type=\"password\"\n    //           label=\"password\"\n    //           placeholder=\"password\"\n    //           name=\"password\"\n    //           onChange={this.handleChange}\n    //           value={this.state.password}\n    //         />\n    //       </Form.Group>\n    //       <Button type=\"submit\">Login</Button>\n    //     </Form>\n    //   </Segment>\n\n    <Grid textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <img src=\"/static/images/logo.png\" alt=\"logo\" className=\"image\" />{\" \"}\n          Log-in to your account\n        </Header>\n        <Form size=\"large\" onSubmit={handleLoginSubmit}>\n          <Segment stacked>\n            <Form.Input\n              fluid\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={input.username}\n              onChange={handleChange}\n            />\n            <Form.Input\n              fluid\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              value={input.password}\n              onChange={handleChange}\n            />\n            <Button color=\"teal\" fluid size=\"large\" onClick={handleLoginSubmit}>\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New here?\n          <Link to=\"/create-account\">\n            <Button size=\"tiny\" style={{ marginLeft: \"15px\" }}>\n              Sign up!\n            </Button>\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (userData) => dispatch(setCurrentUser(userData)),\n    authenticatingUser: () => dispatch(authenticatingUser()),\n    failedLogin: () => dispatch(failedLogin()),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n);\n"]},"metadata":{},"sourceType":"module"}