{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookSearchItem.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button, Image, Form, Modal, Select } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction BookSearchItem(props) {\n  const userGroupsArray = userGroups => {\n    let options = {};\n    options = userGroups.map(userGroup => {\n      return {\n        key: userGroup.id,\n        text: userGroup.name,\n        value: userGroup.id\n      };\n    });\n    return options;\n  };\n\n  const handleBookAdd = e => {\n    debugger; // fetch(\"http://localhost:3000/group_books\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     username: input.username[0],\n    //     password: input.password[0],\n    //   }),\n    // });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    trigger: /*#__PURE__*/React.createElement(Card, {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: props.book.thumbnail,\n      wrapped: true,\n      ui: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Card.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, props.book.title), /*#__PURE__*/React.createElement(Card.Meta, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"By: \", props.book.author)))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Book Details\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    image: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: props.book.thumbnail,\n    wrapped: true,\n    size: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, props.book.title), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"By: \", props.book.author), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Summary: \", props.book.summary), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Pages: \", props.book.pages), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Average Rating: \", props.book.average_rating), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"ISBN-13: \", props.book.isbn13), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"ISBN-10: \", props.book.isbn10), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Pick a club to add this book to:\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: handleChange,\n    placeholder: \"Select Book Club\",\n    options: userGroupsArray(props.user.user.groups),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBookAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Add Book to Club\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n    mostPopular: state.books.mostPopular,\n    searchedBooks: state.books.searchedBooks\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(BookSearchItem));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/BookSearchItem.js"],"names":["React","useState","useEffect","Card","Button","Image","Form","Modal","Select","connect","withRouter","BookSearchItem","props","userGroupsArray","userGroups","options","map","userGroup","key","id","text","name","value","handleBookAdd","e","display","book","thumbnail","title","author","summary","pages","average_rating","isbn13","isbn10","handleChange","user","groups","mapStateToProps","state","mostPopular","books","searchedBooks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Button, Image, Form, Modal, Select } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nfunction BookSearchItem(props) {\n  const userGroupsArray = (userGroups) => {\n    let options = {};\n    options = userGroups.map((userGroup) => {\n      return {\n        key: userGroup.id,\n        text: userGroup.name,\n        value: userGroup.id,\n      };\n    });\n    return options;\n  };\n\n  const handleBookAdd = (e) => {\n    debugger;\n    // fetch(\"http://localhost:3000/group_books\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     username: input.username[0],\n    //     password: input.password[0],\n    //   }),\n    // });\n  };\n\n  return (\n    <div>\n      <Modal\n        trigger={\n          <Card style={{ display: \"inline-block\" }}>\n            <Image src={props.book.thumbnail} wrapped ui={false} />\n            <Card.Content>\n              <Card.Header>{props.book.title}</Card.Header>\n              <Card.Meta>\n                <span>By: {props.book.author}</span>\n              </Card.Meta>\n            </Card.Content>\n          </Card>\n        }\n      >\n        <Modal.Header>Book Details</Modal.Header>\n        <Modal.Content image>\n          <Image src={props.book.thumbnail} wrapped size=\"medium\" />\n          <Modal.Description>\n            <h2>{props.book.title}</h2>\n            <h4>By: {props.book.author}</h4>\n\n            <p>Summary: {props.book.summary}</p>\n            <p>Pages: {props.book.pages}</p>\n            <p>Average Rating: {props.book.average_rating}</p>\n            <p>ISBN-13: {props.book.isbn13}</p>\n            <p>ISBN-10: {props.book.isbn10}</p>\n            <p>Pick a club to add this book to:</p>\n            <Form>\n              <Select onChange={handleChange}\n                placeholder=\"Select Book Club\"\n                options={userGroupsArray(props.user.user.groups)}\n              />\n              <Button onClick={handleBookAdd}>Add Book to Club</Button>\n            </Form>\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n    mostPopular: state.books.mostPopular,\n    searchedBooks: state.books.searchedBooks,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(BookSearchItem));\n"]},"metadata":{},"sourceType":"module"}