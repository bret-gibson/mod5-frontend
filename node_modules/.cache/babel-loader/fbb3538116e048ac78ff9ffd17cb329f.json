{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupSearchContainer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Grid, Image, Button, Form, Item, Divider } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setMostPopularGroups, setSearchedGroups } from \"../actions/group\";\nimport GroupSearchItem from \"./GroupSearchItem\";\n\nfunction GroupSearchContainer(props) {\n  //   return this.props.user ? (\n  const [input, setInput] = useState({\n    search: \"\"\n  });\n  useEffect(() => {\n    let slicedGroups = null;\n    fetch(\"http://localhost:3000/groups\").then(resp => resp.json()).then(groups => {\n      function compare(a, b) {\n        const usersA = a.users.length;\n        const usersB = b.users.length;\n        let comparison = 0;\n\n        if (usersA > usersB) {\n          comparison = -1;\n        } else if (usersA < usersB) {\n          comparison = 1;\n        }\n\n        return comparison;\n      }\n\n      groups.sort(compare).slice(0, 12);\n      slicedGroups = groups.slice(0, 12);\n    }).then(() => {\n      props.setMostPopularGroups(slicedGroups);\n      props.setSearchedGroups(null); // setMostPopular({\n      //   ...mostPopular,\n      //   mostPopular: slicedBooks,\n      // });\n      // console.log(mostPopular);\n    });\n  }, []);\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: [e.target.value]\n    });\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault(); // props.setSearchedBooks(searchedBooks)\n\n    let searchedGroups = null;\n    fetch(\"http://localhost:3000/groups\").then(resp => resp.json()).then(groups => {\n      searchedGroups = groups.filter(group => {\n        return group.name.toLowerCase().includes(input.search[0].toLowerCase());\n      });\n      props.setSearchedGroups(searchedGroups); // books.sort(compare).slice(0, 12);\n      // slicedBooks = books.slice(0, 12);\n    });\n  };\n\n  if (props.searchedGroups === null && props.mostPopularGroups !== null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"50px\",\n        marginTop: \"25px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Find a Club!\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Search Book Clubs\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleChange,\n      placeholder: \"Search Book Clubs\",\n      name: \"search\",\n      value: input.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Button, {\n      style: {\n        alignItems: \"center\"\n      },\n      onClick: handleSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Most Popular Clubs\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Item.Group, {\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, props.mostPopularGroups.map(group => {\n      return /*#__PURE__*/React.createElement(Item, {\n        key: group.id,\n        group: group,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/groups/${group.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Item.Image, {\n        size: \"small\",\n        src: group.image_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Item.Content, {\n        style: {\n          paddingLeft: \"15px\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/groups/${group.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Item.Header, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }\n      }, group.name))), /*#__PURE__*/React.createElement(Item.Description, {\n        style: {\n          alignItems: \"center\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, \"Description:\")), /*#__PURE__*/React.createElement(Item.Description, {\n        style: {\n          alignItems: \"center\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, group.description)))); // <GroupSearchItem key={group.id} group={group} />;\n    })));\n  } else if (props.searchedGroups !== null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"50px\",\n        marginTop: \"25px\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, \"Find a Club!\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, \"Search Book Clubs\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      widths: \"equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleChange,\n      placeholder: \"Search Book Clubs\",\n      name: \"search\",\n      value: input.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Button, {\n      style: {\n        alignItems: \"center\"\n      },\n      onClick: handleSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, \"Search Results\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Item.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, props.searchedGroups.map(group => {\n      return /*#__PURE__*/React.createElement(Item, {\n        key: group.id,\n        group: group,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/groups/${group.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Item.Image, {\n        size: \"small\",\n        src: group.image_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Item.Content, {\n        style: {\n          paddingLeft: \"15px\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/groups/${group.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Item.Header, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 23\n        }\n      }, group.name))), /*#__PURE__*/React.createElement(Item.Description, {\n        style: {\n          alignItems: \"center\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }\n      }, \"Description:\")), /*#__PURE__*/React.createElement(Item.Description, {\n        style: {\n          alignItems: \"center\",\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, group.description))));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 12\n      }\n    }, \" Loading...\");\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mostPopularGroups: state.groups.mostPopularGroups,\n    searchedGroups: state.groups.searchedGroups\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMostPopularGroups: mostPopularGroups => dispatch(setMostPopularGroups(mostPopularGroups)),\n    setSearchedGroups: searchedGroups => dispatch(setSearchedGroups(searchedGroups))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupSearchContainer));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupSearchContainer.js"],"names":["React","useState","useEffect","Card","Grid","Image","Button","Form","Item","Divider","connect","useSelector","withRouter","Link","setMostPopularGroups","setSearchedGroups","GroupSearchItem","GroupSearchContainer","props","input","setInput","search","slicedGroups","fetch","then","resp","json","groups","compare","a","b","usersA","users","length","usersB","comparison","sort","slice","handleChange","e","target","name","value","handleSearchSubmit","preventDefault","searchedGroups","filter","group","toLowerCase","includes","mostPopularGroups","marginLeft","marginTop","color","alignItems","map","id","image_url","paddingLeft","description","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,OAPF,QAQO,mBARP;AASA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,oBAAT,EAA+BC,iBAA/B,QAAwD,kBAAxD;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC;AACjCoB,IAAAA,MAAM,EAAE;AADyB,GAAD,CAAlC;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,YAAY,GAAG,IAAnB;AACAC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChB,eAASC,OAAT,CAAiBC,CAAjB,EAAoBC,CAApB,EAAuB;AACrB,cAAMC,MAAM,GAAGF,CAAC,CAACG,KAAF,CAAQC,MAAvB;AACA,cAAMC,MAAM,GAAGJ,CAAC,CAACE,KAAF,CAAQC,MAAvB;AAEA,YAAIE,UAAU,GAAG,CAAjB;;AACA,YAAIJ,MAAM,GAAGG,MAAb,EAAqB;AACnBC,UAAAA,UAAU,GAAG,CAAC,CAAd;AACD,SAFD,MAEO,IAAIJ,MAAM,GAAGG,MAAb,EAAqB;AAC1BC,UAAAA,UAAU,GAAG,CAAb;AACD;;AACD,eAAOA,UAAP;AACD;;AACDR,MAAAA,MAAM,CAACS,IAAP,CAAYR,OAAZ,EAAqBS,KAArB,CAA2B,CAA3B,EAA8B,EAA9B;AACAf,MAAAA,YAAY,GAAGK,MAAM,CAACU,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAAf;AACD,KAjBH,EAkBGb,IAlBH,CAkBQ,MAAM;AACVN,MAAAA,KAAK,CAACJ,oBAAN,CAA2BQ,YAA3B;AACAJ,MAAAA,KAAK,CAACH,iBAAN,CAAwB,IAAxB,EAFU,CAGV;AACA;AACA;AACA;AACA;AACD,KA1BH;AA2BD,GA7BQ,EA6BN,EA7BM,CAAT;;AA+BA,QAAMuB,YAAY,GAAIC,CAAD,IAAO;AAC1BnB,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEP,OAACoB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiB,CAACF,CAAC,CAACC,MAAF,CAASE,KAAV;AAFV,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,kBAAkB,GAAIJ,CAAD,IAAO;AAChCA,IAAAA,CAAC,CAACK,cAAF,GADgC,CAEhC;;AACA,QAAIC,cAAc,GAAG,IAArB;AACAtB,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChBkB,MAAAA,cAAc,GAAGlB,MAAM,CAACmB,MAAP,CAAeC,KAAD,IAAW;AACxC,eAAOA,KAAK,CAACN,IAAN,CACJO,WADI,GAEJC,QAFI,CAEK9B,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgB2B,WAAhB,EAFL,CAAP;AAGD,OAJgB,CAAjB;AAKA9B,MAAAA,KAAK,CAACH,iBAAN,CAAwB8B,cAAxB,EANgB,CAOhB;AACA;AACD,KAXH;AAYD,GAhBD;;AAkBA,MAAI3B,KAAK,CAAC2B,cAAN,KAAyB,IAAzB,IAAiC3B,KAAK,CAACgC,iBAAN,KAA4B,IAAjE,EAAuE;AACrE,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,SAAS,EAAE,MAAjC;AAAyCC,QAAAA,KAAK,EAAE;AAAhD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eAeE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,QAAQ,EAAEf,YADZ;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,KAAK,EAAEnB,KAAK,CAACE,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eASE,oBAAC,IAAD,CAAM,MAAN;AACE,MAAA,KAAK,EAAE;AACLiC,QAAAA,UAAU,EAAE;AADP,OADT;AAIE,MAAA,OAAO,EAAEX,kBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADF,CAfF,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAnCF,eAoCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCF,eAqCE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzB,KAAK,CAACgC,iBAAN,CAAwBK,GAAxB,CAA6BR,KAAD,IAAW;AACtC,0BACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAK,CAACS,EAAjB;AAAqB,QAAA,KAAK,EAAET,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUA,KAAK,CAACS,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAyB,QAAA,GAAG,EAAET,KAAK,CAACU,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE,MAAf;AAAuBL,UAAAA,KAAK,EAAE;AAA9B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUN,KAAK,CAACS,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKT,KAAK,CAACN,IAAX,CADF,CADF,CADF,eAME,oBAAC,IAAD,CAAM,WAAN;AACE,QAAA,KAAK,EAAE;AAAEa,UAAAA,UAAU,EAAE,QAAd;AAAwBD,UAAAA,KAAK,EAAE;AAA/B,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CANF,eAWE,oBAAC,IAAD,CAAM,WAAN;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,QAAd;AAAwBD,UAAAA,KAAK,EAAE;AAA/B,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIN,KAAK,CAACY,WAAV,CAHF,CAXF,CAJF,CADF,CADsC,CAyBtC;AACD,KA1BA,CADH,CArCF,CADF;AAqED,GAtED,MAsEO,IAAIzC,KAAK,CAAC2B,cAAN,KAAyB,IAA7B,EAAmC;AACxC,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,SAAS,EAAE,MAAjC;AAAyCC,QAAAA,KAAK,EAAE;AAAhD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,eAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,QAAQ,EAAEf,YADZ;AAEE,MAAA,WAAW,EAAC,mBAFd;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,KAAK,EAAEnB,KAAK,CAACE,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eASE,oBAAC,IAAD,CAAM,MAAN;AACE,MAAA,KAAK,EAAE;AACLiC,QAAAA,UAAU,EAAE;AADP,OADT;AAIE,MAAA,OAAO,EAAEX,kBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADF,CAhBF,eAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArCF,eAsCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCF,eAwCE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzB,KAAK,CAAC2B,cAAN,CAAqBU,GAArB,CAA0BR,KAAD,IAAW;AACnC,0BACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAK,CAACS,EAAjB;AAAqB,QAAA,KAAK,EAAET,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUA,KAAK,CAACS,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAyB,QAAA,GAAG,EAAET,KAAK,CAACU,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE,MAAf;AAAuBL,UAAAA,KAAK,EAAE;AAA9B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUN,KAAK,CAACS,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKT,KAAK,CAACN,IAAX,CADF,CADF,CADF,eAME,oBAAC,IAAD,CAAM,WAAN;AACE,QAAA,KAAK,EAAE;AAAEa,UAAAA,UAAU,EAAE,QAAd;AAAwBD,UAAAA,KAAK,EAAE;AAA/B,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CANF,eAWE,oBAAC,IAAD,CAAM,WAAN;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,QAAd;AAAwBD,UAAAA,KAAK,EAAE;AAA/B,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIN,KAAK,CAACY,WAAV,CAHF,CAXF,CAJF,CADF;AAwBD,KAzBA,CADH,CAxCF,CADF;AAuED,GAxEM,MAwEA;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;AACF;;AAED,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,iBAAiB,EAAEW,KAAK,CAAClC,MAAN,CAAauB,iBAD3B;AAELL,IAAAA,cAAc,EAAEgB,KAAK,CAAClC,MAAN,CAAakB;AAFxB,GAAP;AAID,CALD;;AAMA,MAAMiB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjD,IAAAA,oBAAoB,EAAGoC,iBAAD,IACpBa,QAAQ,CAACjD,oBAAoB,CAACoC,iBAAD,CAArB,CAFL;AAGLnC,IAAAA,iBAAiB,EAAG8B,cAAD,IACjBkB,QAAQ,CAAChD,iBAAiB,CAAC8B,cAAD,CAAlB;AAJL,GAAP;AAMD,CAPD;;AASA,eAAejC,UAAU,CACvBF,OAAO,CAACkD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7C,oBAA7C,CADuB,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Grid,\n  Image,\n  Button,\n  Form,\n  Item,\n  Divider,\n} from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setMostPopularGroups, setSearchedGroups } from \"../actions/group\";\nimport GroupSearchItem from \"./GroupSearchItem\";\n\nfunction GroupSearchContainer(props) {\n  //   return this.props.user ? (\n\n  const [input, setInput] = useState({\n    search: \"\",\n  });\n\n  useEffect(() => {\n    let slicedGroups = null;\n    fetch(\"http://localhost:3000/groups\")\n      .then((resp) => resp.json())\n      .then((groups) => {\n        function compare(a, b) {\n          const usersA = a.users.length;\n          const usersB = b.users.length;\n\n          let comparison = 0;\n          if (usersA > usersB) {\n            comparison = -1;\n          } else if (usersA < usersB) {\n            comparison = 1;\n          }\n          return comparison;\n        }\n        groups.sort(compare).slice(0, 12);\n        slicedGroups = groups.slice(0, 12);\n      })\n      .then(() => {\n        props.setMostPopularGroups(slicedGroups);\n        props.setSearchedGroups(null);\n        // setMostPopular({\n        //   ...mostPopular,\n        //   mostPopular: slicedBooks,\n        // });\n        // console.log(mostPopular);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: [e.target.value],\n    });\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    // props.setSearchedBooks(searchedBooks)\n    let searchedGroups = null;\n    fetch(\"http://localhost:3000/groups\")\n      .then((resp) => resp.json())\n      .then((groups) => {\n        searchedGroups = groups.filter((group) => {\n          return group.name\n            .toLowerCase()\n            .includes(input.search[0].toLowerCase());\n        });\n        props.setSearchedGroups(searchedGroups);\n        // books.sort(compare).slice(0, 12);\n        // slicedBooks = books.slice(0, 12);\n      });\n  };\n\n  if (props.searchedGroups === null && props.mostPopularGroups !== null) {\n    return (\n      <div style={{ marginLeft: \"50px\", marginTop: \"25px\", color: \"white\" }}>\n        <h1>Find a Club!</h1>\n        <h4>Search Book Clubs</h4>\n        {/* <Form>\n          <Form.Field>\n            <label>Search Book Clubs</label>\n            <input\n              onChange={handleChange}\n              placeholder=\"Search\"\n              name=\"search\"\n              value={input.search}\n            />\n          </Form.Field>\n          <Button onClick={handleSearchSubmit}>Search</Button>\n        </Form> */}\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Input>\n              <input\n                onChange={handleChange}\n                placeholder=\"Search Book Clubs\"\n                name=\"search\"\n                value={input.search}\n              />\n            </Form.Input>\n            <Form.Button\n              style={{\n                alignItems: \"center\",\n              }}\n              onClick={handleSearchSubmit}\n            >\n              Search\n            </Form.Button>\n          </Form.Group>\n        </Form>\n        <h2>Most Popular Clubs</h2>\n        <Divider />\n        <Item.Group divided>\n          {props.mostPopularGroups.map((group) => {\n            return (\n              <Item key={group.id} group={group}>\n                <Link to={`/groups/${group.id}`}>\n                  <Item.Image size=\"small\" src={group.image_url} />\n                </Link>\n                <Item.Content style={{ paddingLeft: \"15px\", color: \"white\" }}>\n                  <Link to={`/groups/${group.id}`}>\n                    <Item.Header as=\"a\">\n                      <h1>{group.name}</h1>\n                    </Item.Header>\n                  </Link>\n                  <Item.Description\n                    style={{ alignItems: \"center\", color: \"white\" }}\n                  >\n                    <h4>Description:</h4>\n                  </Item.Description>\n                  <Item.Description\n                    style={{ alignItems: \"center\", color: \"white\" }}\n                  >\n                    <p>{group.description}</p>\n                  </Item.Description>\n                </Item.Content>\n              </Item>\n            );\n            // <GroupSearchItem key={group.id} group={group} />;\n          })}\n        </Item.Group>\n      </div>\n    );\n  } else if (props.searchedGroups !== null) {\n    return (\n      <div style={{ marginLeft: \"50px\", marginTop: \"25px\", color: \"white\" }}>\n        <h1>Find a Club!</h1>\n        <h4>Search Book Clubs</h4>\n        {/* <Form>\n          <Form.Field>\n            <label>Search Book Clubs</label>\n            <input\n              onChange={handleChange}\n              placeholder=\"Search\"\n              name=\"search\"\n              value={input.search}\n            />\n          </Form.Field>\n          <Button onClick={handleSearchSubmit}>Search</Button>\n        </Form> */}\n\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Form.Input>\n              <input\n                onChange={handleChange}\n                placeholder=\"Search Book Clubs\"\n                name=\"search\"\n                value={input.search}\n              />\n            </Form.Input>\n            <Form.Button\n              style={{\n                alignItems: \"center\",\n              }}\n              onClick={handleSearchSubmit}\n            >\n              Search\n            </Form.Button>\n          </Form.Group>\n        </Form>\n\n        <h2>Search Results</h2>\n        <Divider />\n\n        <Item.Group>\n          {props.searchedGroups.map((group) => {\n            return (\n              <Item key={group.id} group={group}>\n                <Link to={`/groups/${group.id}`}>\n                  <Item.Image size=\"small\" src={group.image_url} />\n                </Link>\n                <Item.Content style={{ paddingLeft: \"15px\", color: \"white\" }}>\n                  <Link to={`/groups/${group.id}`}>\n                    <Item.Header as=\"a\">\n                      <h1>{group.name}</h1>\n                    </Item.Header>\n                  </Link>\n                  <Item.Description\n                    style={{ alignItems: \"center\", color: \"white\" }}\n                  >\n                    <h4>Description:</h4>\n                  </Item.Description>\n                  <Item.Description\n                    style={{ alignItems: \"center\", color: \"white\" }}\n                  >\n                    <p>{group.description}</p>\n                  </Item.Description>\n                </Item.Content>\n              </Item>\n            );\n          })}\n        </Item.Group>\n      </div>\n    );\n  } else {\n    return <h1> Loading...</h1>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    mostPopularGroups: state.groups.mostPopularGroups,\n    searchedGroups: state.groups.searchedGroups,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMostPopularGroups: (mostPopularGroups) =>\n      dispatch(setMostPopularGroups(mostPopularGroups)),\n    setSearchedGroups: (searchedGroups) =>\n      dispatch(setSearchedGroups(searchedGroups)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupSearchContainer)\n);\n"]},"metadata":{},"sourceType":"module"}