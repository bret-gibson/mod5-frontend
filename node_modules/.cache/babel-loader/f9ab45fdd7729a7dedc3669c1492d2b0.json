{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Comment } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PostForm from \"./PostForm\";\nimport Moment from \"react-moment\";\n\nfunction Post(props) {\n  const [editToggle, setEditToggle] = useState(false);\n\n  const handleEditToggle = e => {\n    setEditToggle(!editToggle);\n  };\n\n  if (props.user.id === props.post.user.id) {\n    if (editToggle) {\n      /*#__PURE__*/\n      React.createElement(PostForm, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      });\n    }\n\n    editToggle ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, props.post.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      fromNow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, props.post.created_at))), /*#__PURE__*/React.createElement(Comment.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, props.post.content), /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleEditToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(Comment.Action, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, \"Delete Post\")))), /*#__PURE__*/React.createElement(PostForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    })) :\n    /*#__PURE__*/\n    //   <div>\n    //     <h4>{props.post.user.username} says...</h4>\n    //     <p style={{ display: \"inline-block\", paddingBottom: \"10px\" }}>\n    //       {props.post.content}\n    //     </p>\n    //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n    //       Edit Post\n    //     </Button>\n    //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n    //       Delete Post\n    //     </Button>\n    //   </div>\n    React.createElement(Comment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, props.post.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      fromNow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, props.post.created_at))), /*#__PURE__*/React.createElement(Comment.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, props.post.content), /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleEditToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(Comment.Action, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Delete Post\"))));\n  } else {\n    return (\n      /*#__PURE__*/\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p>{props.post.content}</p>\n      //   </div>\n      React.createElement(Comment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Author, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, props.post.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Moment, {\n        fromNow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }, props.post.created_at))), /*#__PURE__*/React.createElement(Comment.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, props.post.content)))\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers\n  };\n}; // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n//   };\n// };\n\n\nexport default withRouter(connect(mapStateToProps, null)(Post));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/Post.js"],"names":["React","useState","useEffect","Button","Comment","withRouter","connect","PostForm","Moment","Post","props","editToggle","setEditToggle","handleEditToggle","e","user","id","post","username","created_at","content","color","mapStateToProps","state","group","groups","groupBook","groupUsers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Comment } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PostForm from \"./PostForm\";\nimport Moment from \"react-moment\";\n\nfunction Post(props) {\n  const [editToggle, setEditToggle] = useState(false);\n\n  const handleEditToggle = (e) => {\n    setEditToggle(!editToggle);\n  };\n  if (props.user.id === props.post.user.id) {\n    if (editToggle) {\n      <PostForm />;\n    }\n    editToggle ? (\n      <div>\n        <Comment>\n          <Comment.Content>\n            <Comment.Author as=\"a\">{props.post.user.username}</Comment.Author>\n            <Comment.Metadata>\n              <div>\n                <Moment fromNow>{props.post.created_at}</Moment>\n              </div>\n            </Comment.Metadata>\n            <Comment.Text>{props.post.content}</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action onClick={handleEditToggle}>\n                Edit Post\n              </Comment.Action>\n              <Comment.Action style={{ color: \"red\" }}>\n                Delete Post\n              </Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n        <PostForm />\n      </div>\n    ) : (\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p style={{ display: \"inline-block\", paddingBottom: \"10px\" }}>\n      //       {props.post.content}\n      //     </p>\n      //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n      //       Edit Post\n      //     </Button>\n      //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n      //       Delete Post\n      //     </Button>\n      //   </div>\n      <Comment>\n        <Comment.Content>\n          <Comment.Author as=\"a\">{props.post.user.username}</Comment.Author>\n          <Comment.Metadata>\n            <div>\n              <Moment fromNow>{props.post.created_at}</Moment>\n            </div>\n          </Comment.Metadata>\n          <Comment.Text>{props.post.content}</Comment.Text>\n          <Comment.Actions>\n            <Comment.Action onClick={handleEditToggle}>\n              Edit Post\n            </Comment.Action>\n            <Comment.Action style={{ color: \"red\" }}>\n              Delete Post\n            </Comment.Action>\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n    );\n  } else {\n    return (\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p>{props.post.content}</p>\n      //   </div>\n      <Comment>\n        <Comment.Content>\n          <Comment.Author as=\"a\">{props.post.user.username}</Comment.Author>\n          <Comment.Metadata>\n            <div>\n              <Moment fromNow>{props.post.created_at}</Moment>\n            </div>\n          </Comment.Metadata>\n          <Comment.Text>{props.post.content}</Comment.Text>\n          {/* <Comment.Actions>\n            <Comment.Action>Edit Post</Comment.Action>\n            <Comment.Action style={{ fontColor: \"red\" }}>\n              Delete Post\n            </Comment.Action>\n          </Comment.Actions> */}\n        </Comment.Content>\n      </Comment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     setBookPosts: (posts) => dispatch(setBookPosts(posts)),\n//   };\n// };\n\nexport default withRouter(connect(mapStateToProps, null)(Post));\n"]},"metadata":{},"sourceType":"module"}