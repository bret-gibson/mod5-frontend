{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBooks, setGroupUsers, setGroup, setGroupBook } from \"../actions/group\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = a => {\n    props.setGroupBook(a);\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    console.log(\"((@#$@#$@#$@#$@#$\");\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(group => {\n      debugger;\n      props.setGroup(group);\n      groupBooks = group.group_books;\n      groupUsers = group.users;\n    }).then(() => {\n      props.setGroupBooks(groupBooks);\n      props.setGroupUsers(groupUsers);\n    });\n  }, []);\n\n  if (props.group_books === null && props.groupUsers === null) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {// debugger;\n    // return (\n    //   <div>\n    //     <h1>Welcome to {props.group.name}!</h1>\n    //     {props.group.users.length === 1 ? (\n    //       <h3>{props.group.users.length} member</h3>\n    //     ) : (\n    //       <h3>{props.group.users.length} members</h3>\n    //     )}\n    //     <Button size=\"huge\" floated=\"right\">\n    //       Join Group\n    //     </Button>\n    //     <h1>{props.group.description}</h1>\n    //     {props.group.group_books ? (\n    //       <Item.Group divided>\n    //         {props.group_books.map((groupBook) => {\n    //           return (\n    //             <Item>\n    //               <Link\n    //                 to=\"\"\n    //                 onClick={() => {\n    //                   handleGroupBookClick(groupBook);\n    //                 }}\n    //               >\n    //                 <Item.Image size=\"small\" src={groupBook.book.thumbnail} />\n    //               </Link>\n    //               <Item.Content style={{ marginLeft: \"20px\" }}>\n    //                 <Link\n    //                   to=\"\"\n    //                   onClick={() => {\n    //                     handleGroupBookClick(groupBook);\n    //                   }}\n    //                 >\n    //                   <Item.Header>{groupBook.book.title}</Item.Header>\n    //                 </Link>\n    //                 <Item.Meta>\n    //                   <span>{groupBook.book.author}</span>\n    //                 </Item.Meta>\n    //                 <Item.Description>\n    //                   <p>{groupBook.status}</p>\n    //                 </Item.Description>\n    //               </Item.Content>\n    //             </Item>\n    //           );\n    //         })}\n    //       </Item.Group>\n    //     ) : (\n    //       <h1>This group has no books added!</h1>\n    //     )}\n    //   </div>\n    // );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    group: state.groups.group,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group)),\n    setGroupBooks: group => dispatch(setGroupBooks(group)),\n    setGroupUsers: group => dispatch(setGroupUsers(group)),\n    setGroupBook: groupBook => dispatch(setGroupBook(groupBook))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupPage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupPage.js"],"names":["React","useState","useEffect","Button","Item","Grid","connect","withRouter","Link","setGroupBooks","setGroupUsers","setGroup","setGroupBook","GroupPage","props","handleGroupBookClick","a","groupBooks","groupUsers","console","log","wrongHostString","document","location","toString","rightHostString","replace","fetch","then","resp","json","group","group_books","users","mapStateToProps","state","groups","selectedGroupBook","groupBook","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Item, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport {\n  setGroupBooks,\n  setGroupUsers,\n  setGroup,\n  setGroupBook,\n} from \"../actions/group\";\n\nfunction GroupPage(props) {\n  const handleGroupBookClick = (a) => {\n    props.setGroupBook(a);\n  };\n\n  useEffect(() => {\n    let groupBooks = null;\n    let groupUsers = null;\n    console.log(\"((@#$@#$@#$@#$@#$\");\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((group) => {\n        debugger;\n        props.setGroup(group);\n        groupBooks = group.group_books;\n        groupUsers = group.users;\n      })\n      .then(() => {\n        props.setGroupBooks(groupBooks);\n        props.setGroupUsers(groupUsers);\n      });\n  }, []);\n\n  if (props.group_books === null && props.groupUsers === null) {\n    return <h1>Loading...</h1>;\n  } else {\n    // debugger;\n    // return (\n    //   <div>\n    //     <h1>Welcome to {props.group.name}!</h1>\n    //     {props.group.users.length === 1 ? (\n    //       <h3>{props.group.users.length} member</h3>\n    //     ) : (\n    //       <h3>{props.group.users.length} members</h3>\n    //     )}\n    //     <Button size=\"huge\" floated=\"right\">\n    //       Join Group\n    //     </Button>\n    //     <h1>{props.group.description}</h1>\n    //     {props.group.group_books ? (\n    //       <Item.Group divided>\n    //         {props.group_books.map((groupBook) => {\n    //           return (\n    //             <Item>\n    //               <Link\n    //                 to=\"\"\n    //                 onClick={() => {\n    //                   handleGroupBookClick(groupBook);\n    //                 }}\n    //               >\n    //                 <Item.Image size=\"small\" src={groupBook.book.thumbnail} />\n    //               </Link>\n    //               <Item.Content style={{ marginLeft: \"20px\" }}>\n    //                 <Link\n    //                   to=\"\"\n    //                   onClick={() => {\n    //                     handleGroupBookClick(groupBook);\n    //                   }}\n    //                 >\n    //                   <Item.Header>{groupBook.book.title}</Item.Header>\n    //                 </Link>\n    //                 <Item.Meta>\n    //                   <span>{groupBook.book.author}</span>\n    //                 </Item.Meta>\n    //                 <Item.Description>\n    //                   <p>{groupBook.status}</p>\n    //                 </Item.Description>\n    //               </Item.Content>\n    //             </Item>\n    //           );\n    //         })}\n    //       </Item.Group>\n    //     ) : (\n    //       <h1>This group has no books added!</h1>\n    //     )}\n    //   </div>\n    // );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    group: state.groups.group,\n    groupBooks: state.groups.groupBooks,\n    groupUsers: state.groups.groupUsers,\n    selectedGroupBook: state.groups.groupBook,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n    setGroupBooks: (group) => dispatch(setGroupBooks(group)),\n    setGroupUsers: (group) => dispatch(setGroupUsers(group)),\n    setGroupBook: (groupBook) => dispatch(setGroupBook(groupBook)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupPage)\n);\n"]},"metadata":{},"sourceType":"module"}