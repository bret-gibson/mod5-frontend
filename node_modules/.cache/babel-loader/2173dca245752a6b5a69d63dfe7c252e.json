{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Grid, Header, Button, Form, Segment, Message, Image } from \"semantic-ui-react\";\nimport { setCurrentUser, authenticatingUser, failedLogin, setUserPosts } from \"../actions/user\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const [input, setInput] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: [e.target.value]\n    });\n  }; //When form is submitted, make a fetch to \"log in the user\"\n\n\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    let userIdToSearch = \"\";\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: input.username,\n        password: input.password\n      })\n    }).then(res => res.json()).then(userData => {\n      console.log(\"response from the server\", userData);\n\n      if (userData.error_message) {\n        alert(userData.error_message);\n      } else {\n        userIdToSearch = userData.user_data.id;\n        localStorage.setItem(\"token\", userData.token);\n        localStorage.setItem(\"userId\", userData.user_data.id); //added this to store current user\n      }\n    }).then(() => {\n      fetch(`http://localhost:3000/users/${userIdToSearch}`).then(resp => resp.json()).then(userData => {\n        props.setCurrentUser(userData.user);\n        props.setUserPosts(userData.user.posts);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    textAlign: \"center\",\n    verticalAlign: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h2\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    style: {\n      display: \"inline-block\"\n    },\n    size: \"huge\",\n    src: \"/logo.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), \"Log-in to your account\"), /*#__PURE__*/React.createElement(Form, {\n    size: \"large\",\n    onSubmit: handleLoginSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Username\",\n    name: \"username\",\n    value: input.username,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    value: input.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    onClick: handleLoginSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"New here?\", /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"tiny\",\n    style: {\n      marginLeft: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Sign up!\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    // user: state.user.user,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: userData => dispatch(setCurrentUser(userData)),\n    setUserPosts: userPosts => dispatch(setUserPosts(userPosts)),\n    authenticatingUser: () => dispatch(authenticatingUser()),\n    failedLogin: () => dispatch(failedLogin())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginForm));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js"],"names":["React","useState","withRouter","Grid","Header","Button","Form","Segment","Message","Image","setCurrentUser","authenticatingUser","failedLogin","setUserPosts","connect","Link","LoginForm","props","input","setInput","username","password","handleChange","e","target","name","value","handleLoginSubmit","preventDefault","userIdToSearch","fetch","method","headers","body","JSON","stringify","then","res","json","userData","console","log","error_message","alert","user_data","id","localStorage","setItem","token","resp","user","posts","marginTop","maxWidth","display","marginLeft","mapStateToProps","state","mapDispatchToProps","dispatch","userPosts"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport {\n  Grid,\n  Header,\n  Button,\n  Form,\n  Segment,\n  Message,\n  Image,\n} from \"semantic-ui-react\";\nimport {\n  setCurrentUser,\n  authenticatingUser,\n  failedLogin,\n  setUserPosts,\n} from \"../actions/user\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n  const [input, setInput] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: [e.target.value],\n    });\n  };\n\n  //When form is submitted, make a fetch to \"log in the user\"\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    let userIdToSearch = \"\";\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: input.username,\n        password: input.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((userData) => {\n        console.log(\"response from the server\", userData);\n        if (userData.error_message) {\n          alert(userData.error_message);\n        } else {\n          userIdToSearch = userData.user_data.id;\n          localStorage.setItem(\"token\", userData.token);\n          localStorage.setItem(\"userId\", userData.user_data.id); //added this to store current user\n        }\n      })\n      .then(() => {\n        fetch(`http://localhost:3000/users/${userIdToSearch}`)\n          .then((resp) => resp.json())\n          .then((userData) => {\n            props.setCurrentUser(userData.user);\n            props.setUserPosts(userData.user.posts);\n          });\n      });\n  };\n\n  return (\n    <div style={{ marginTop: \"20px\" }}>\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" textAlign=\"center\">\n            <Image\n              style={{ display: \"inline-block\" }}\n              size=\"huge\"\n              src=\"/logo.png\"\n            ></Image>\n            Log-in to your account\n          </Header>\n          <Form size=\"large\" onSubmit={handleLoginSubmit}>\n            <Segment stacked>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                name=\"username\"\n                value={input.username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                value={input.password}\n                onChange={handleChange}\n              />\n              <Button\n                color=\"teal\"\n                fluid\n                size=\"large\"\n                onClick={handleLoginSubmit}\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New here?\n            <Link to=\"/create-account\">\n              <Button size=\"tiny\" style={{ marginLeft: \"15px\" }}>\n                Sign up!\n              </Button>\n            </Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // user: state.user.user,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (userData) => dispatch(setCurrentUser(userData)),\n    setUserPosts: (userPosts) => dispatch(setUserPosts(userPosts)),\n    authenticatingUser: () => dispatch(authenticatingUser()),\n    failedLogin: () => dispatch(failedLogin()),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(LoginForm)\n);\n"]},"metadata":{},"sourceType":"module"}