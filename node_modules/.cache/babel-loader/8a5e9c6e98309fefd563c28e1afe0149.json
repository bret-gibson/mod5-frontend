{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport LoginForm from \"./components/LoginForm\";\nimport Nav from \"./components/Nav\";\nimport NotFound from \"./components/NotFound\";\nimport \"./App.css\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"./actions/user\";\nimport LandingPage from \"./components/LandingPage\";\nimport BookSearchContainer from \"./components/BookSearchContainer\";\nimport GroupSearchContainer from \"./components/GroupSearchContainer\";\n\nfunction App(props) {\n  // constructor() {\n  //   super();\n  //   this.state = { currentUser: null };\n  // }\n  // updateCurrentUser = (user) => {\n  //   this.setState({ currentUser: user });\n  // };\n  // useEffect(() => {\n  //   checkUserAuthentication();\n  // });\n  // const checkUserAuthentication = () => {\n  //   console.log(\"mounted\");\n  //   if (localStorage.getItem(\"token\")) {\n  //     fetch(\"http://localhost:3000/decode_token\", {\n  //       headers: {\n  //         Authenticate: localStorage.token,\n  //       },\n  //     })\n  //       .then((res) => res.json())\n  //       .then((userData) => {\n  //         // this.updateCurrentUser(userData);\n  //         setCurrentUser(userData);\n  //         //if error, don't update the state\n  //       });\n  //   } else {\n  //     console.log(\"No token found, user is not authenticated\");\n  //   }\n  // };\n  // componentDidMount() {\n  //   console.log(\"mounted\");\n  //   if (localStorage.getItem(\"token\")) {\n  //     fetch(\"http://localhost:3000/decode_token\", {\n  //       headers: {\n  //         Authenticate: localStorage.token,\n  //       },\n  //     })\n  //       .then((res) => res.json())\n  //       .then((userData) => {\n  //         this.updateCurrentUser(userData);\n  //         //if error, don't update the state\n  //       });\n  //   } else {\n  //     console.log(\"No token found, user is not authenticated\");\n  //   }\n  // }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav // user={this.state.currentUser}\n  // updateCurrentUser={this.updateCurrentUser}\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(LandingPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 45\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/profile\",\n    render: () => {\n      return props.user !== null ? /*#__PURE__*/React.createElement(Profile, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 42\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 56\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/browse-books\",\n    render: () => /*#__PURE__*/React.createElement(BookSearchContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/browse-groups\",\n    render: () => /*#__PURE__*/React.createElement(GroupSearchContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/group/:id\",\n    render: () => /*#__PURE__*/React.createElement(GroupPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 54\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: () => props.user === null ?\n    /*#__PURE__*/\n    // <LoginForm updateCurrentUser={this.updateCurrentUser} />\n    React.createElement(LoginForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: NotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst mapStateToProps = state => ({\n  user: state.user.user,\n  loggedIn: state.user.loggedIn\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  setCurrentUser\n})(App)); // export default withRouter(App);","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/App.js"],"names":["React","useState","useEffect","Route","Switch","Redirect","withRouter","Profile","LoginForm","Nav","NotFound","compose","connect","setCurrentUser","LandingPage","BookSearchContainer","GroupSearchContainer","App","props","user","mapStateToProps","state","loggedIn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\nimport LoginForm from \"./components/LoginForm\";\nimport Nav from \"./components/Nav\";\nimport NotFound from \"./components/NotFound\";\nimport \"./App.css\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"./actions/user\";\nimport LandingPage from \"./components/LandingPage\";\nimport BookSearchContainer from \"./components/BookSearchContainer\";\nimport GroupSearchContainer from \"./components/GroupSearchContainer\";\n\nfunction App(props) {\n  // constructor() {\n  //   super();\n  //   this.state = { currentUser: null };\n  // }\n\n  // updateCurrentUser = (user) => {\n  //   this.setState({ currentUser: user });\n  // };\n  // useEffect(() => {\n  //   checkUserAuthentication();\n  // });\n\n  // const checkUserAuthentication = () => {\n  //   console.log(\"mounted\");\n  //   if (localStorage.getItem(\"token\")) {\n  //     fetch(\"http://localhost:3000/decode_token\", {\n  //       headers: {\n  //         Authenticate: localStorage.token,\n  //       },\n  //     })\n  //       .then((res) => res.json())\n  //       .then((userData) => {\n  //         // this.updateCurrentUser(userData);\n  //         setCurrentUser(userData);\n  //         //if error, don't update the state\n  //       });\n  //   } else {\n  //     console.log(\"No token found, user is not authenticated\");\n  //   }\n  // };\n  // componentDidMount() {\n  //   console.log(\"mounted\");\n  //   if (localStorage.getItem(\"token\")) {\n  //     fetch(\"http://localhost:3000/decode_token\", {\n  //       headers: {\n  //         Authenticate: localStorage.token,\n  //       },\n  //     })\n  //       .then((res) => res.json())\n  //       .then((userData) => {\n  //         this.updateCurrentUser(userData);\n  //         //if error, don't update the state\n  //       });\n  //   } else {\n  //     console.log(\"No token found, user is not authenticated\");\n  //   }\n  // }\n  return (\n    <div>\n      <Nav\n      // user={this.state.currentUser}\n      // updateCurrentUser={this.updateCurrentUser}\n      />\n      <Switch>\n        <Route exact path=\"/\" render={() => <LandingPage />} />\n        <Route\n          exact\n          path=\"/profile\"\n          render={() => {\n            return props.user !== null ? <Profile /> : <Redirect to=\"/login\" />;\n          }}\n        />\n        <Route\n          exact\n          path=\"/browse-books\"\n          render={() => <BookSearchContainer />}\n        />\n        <Route\n          exact\n          path=\"/browse-groups\"\n          render={() => <GroupSearchContainer />}\n        />\n        <Route exact path=\"/group/:id\" render={() => <GroupPage />} />\n        <Route\n          exact\n          path=\"/login\"\n          render={() =>\n            props.user === null ? (\n              // <LoginForm updateCurrentUser={this.updateCurrentUser} />\n              <LoginForm />\n            ) : (\n              <Redirect to=\"/profile\" />\n            )\n          }\n        />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user.user,\n  loggedIn: state.user.loggedIn,\n});\n\nexport default withRouter(connect(mapStateToProps, { setCurrentUser })(App));\n// export default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}