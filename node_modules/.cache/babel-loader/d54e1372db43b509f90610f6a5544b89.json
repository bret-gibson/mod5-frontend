{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js\";\nimport React from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  const getUserActiveBooks = () => {\n    let activeBooks = [];\n    {\n      props.user.groups.map(group => {\n        return group.group_books.map(groupBook => {\n          if (groupBook.active === true) {\n            activeBooks.push(group);\n            return /*#__PURE__*/React.createElement(\"h1\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 15\n              }\n            }, groupBook.book.title, \", \", group.name);\n          }\n        });\n      });\n    }\n    return activeBooks;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"My Active Books\"), props.user.groups.map(group => {\n    return group.group_books.map(groupBook => {\n      if (groupBook.active === true) {\n        return /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }\n        }, groupBook.book.title, \", \", group.name);\n      }\n    });\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    // user: state.user.user,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: user => dispatch(setCurrentUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardBooks));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js"],"names":["React","NavLink","withRouter","Link","Menu","Button","Image","setCurrentUser","connect","DashboardBooks","props","getUserActiveBooks","activeBooks","user","groups","map","group","group_books","groupBook","active","push","book","title","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,QAA0C,kBAA1C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,mBAApC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,WAAW,GAAG,EAAlB;AACA;AACEF,MAAAA,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAC/B,eAAOA,KAAK,CAACC,WAAN,CAAkBF,GAAlB,CAAuBG,SAAD,IAAe;AAC1C,cAAIA,SAAS,CAACC,MAAV,KAAqB,IAAzB,EAA+B;AAC7BP,YAAAA,WAAW,CAACQ,IAAZ,CAAiBJ,KAAjB;AACA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGE,SAAS,CAACG,IAAV,CAAeC,KADlB,QAC2BN,KAAK,CAACO,IADjC,CADF;AAKD;AACF,SATM,CAAP;AAUD,OAXD;AAYD;AACD,WAAOX,WAAP;AACD,GAjBD;;AAmBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAChC,WAAOA,KAAK,CAACC,WAAN,CAAkBF,GAAlB,CAAuBG,SAAD,IAAe;AAC1C,UAAIA,SAAS,CAACC,MAAV,KAAqB,IAAzB,EAA+B;AAC7B,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,SAAS,CAACG,IAAV,CAAeC,KADlB,QAC2BN,KAAK,CAACO,IADjC,CADF;AAKD;AACF,KARM,CAAP;AASD,GAVA,CAFH,CADF;AAgBD;;AACD,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL;AACAZ,IAAAA,IAAI,EAAEY,KAAK,CAACZ;AAFP,GAAP;AAID,CALD;;AAOA,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,cAAc,EAAGM,IAAD,IAAUc,QAAQ,CAACpB,cAAc,CAACM,IAAD,CAAf;AAD7B,GAAP;AAGD,CAJD;;AAKA,eAAeX,UAAU,CACvBM,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,cAA7C,CADuB,CAAzB","sourcesContent":["import React from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  const getUserActiveBooks = () => {\n    let activeBooks = []\n    {\n      props.user.groups.map((group) => {\n        return group.group_books.map((groupBook) => {\n          if (groupBook.active === true) {\n            activeBooks.push(group)\n            return (\n              <h1>\n                {groupBook.book.title}, {group.name}\n              </h1>\n            );\n          }\n        });\n      });\n    }\n    return activeBooks\n  };\n\n  return (\n    <div>\n      <h1>My Active Books</h1>\n      {props.user.groups.map((group) => {\n        return group.group_books.map((groupBook) => {\n          if (groupBook.active === true) {\n            return (\n              <h1>\n                {groupBook.book.title}, {group.name}\n              </h1>\n            );\n          }\n        });\n      })}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // user: state.user.user,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(DashboardBooks)\n);\n"]},"metadata":{},"sourceType":"module"}