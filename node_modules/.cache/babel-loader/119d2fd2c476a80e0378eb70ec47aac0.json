{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/ProfilePage.js\";\nimport React, { useEffect } from \"react\";\nimport { Button, Item, Grid, Card, ItemContent, ItemDescription } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBook } from \"../actions/group\";\nimport { setSelectedUser } from \"../actions/user\";\n\nfunction ProfilePage(props) {\n  const handleGroupBookClick = groupBook => {\n    props.setGroupBook(groupBook);\n  };\n\n  useEffect(() => {\n    let selectedUser = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString).then(resp => resp.json()).then(userData => {\n      selectedUser = userData;\n    }).then(() => {\n      props.setSelectedUser(selectedUser);\n    });\n  }, []);\n\n  if (props.selectedUser) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    // userGroups: state.user.userGroups,\n    // user: state.user.user,\n    selectedUser: state.user.selectedUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroupBook: group => dispatch(setGroupBook(group)),\n    setSelectedUser: user => dispatch(setSelectedUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProfilePage));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/ProfilePage.js"],"names":["React","useEffect","Button","Item","Grid","Card","ItemContent","ItemDescription","connect","withRouter","Link","setGroupBook","setSelectedUser","ProfilePage","props","handleGroupBookClick","groupBook","selectedUser","wrongHostString","document","location","toString","rightHostString","replace","fetch","then","resp","json","userData","mapStateToProps","state","user","mapDispatchToProps","dispatch","group"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,eANF,QAOO,mBAPP;AAQA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,eAAT,QAAgC,iBAAhC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,oBAAoB,GAAIC,SAAD,IAAe;AAC1CF,IAAAA,KAAK,CAACH,YAAN,CAAmBK,SAAnB;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,YAAY,GAAG,IAAnB;AACA,QAAIC,eAAe,GAAGC,QAAQ,CAACC,QAAT,CAAkBC,QAAlB,EAAtB;AACA,QAAIC,eAAe,GAAGJ,eAAe,CAACK,OAAhB,CAAwB,MAAxB,EAAgC,MAAhC,CAAtB;AACAC,IAAAA,KAAK,CAACF,eAAD,CAAL,CACGG,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,QAAD,IAAc;AAClBX,MAAAA,YAAY,GAAGW,QAAf;AACD,KAJH,EAKGH,IALH,CAKQ,MAAM;AACVX,MAAAA,KAAK,CAACF,eAAN,CAAsBK,YAAtB;AACD,KAPH;AAQD,GAZQ,EAYN,EAZM,CAAT;;AAcA,MAAIH,KAAK,CAACG,YAAV,EAAwB;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AAEF;;AAED,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL;AACA;AACAb,IAAAA,YAAY,EAAEa,KAAK,CAACC,IAAN,CAAWd;AAHpB,GAAP;AAKD,CAND;;AAQA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLtB,IAAAA,YAAY,EAAGuB,KAAD,IAAWD,QAAQ,CAACtB,YAAY,CAACuB,KAAD,CAAb,CAD5B;AAELtB,IAAAA,eAAe,EAAGmB,IAAD,IAAUE,QAAQ,CAACrB,eAAe,CAACmB,IAAD,CAAhB;AAF9B,GAAP;AAID,CALD;;AAOA,eAAetB,UAAU,CACvBD,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,WAA7C,CADuB,CAAzB","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Button,\n  Item,\n  Grid,\n  Card,\n  ItemContent,\n  ItemDescription,\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroupBook } from \"../actions/group\";\nimport { setSelectedUser } from \"../actions/user\";\n\nfunction ProfilePage(props) {\n  const handleGroupBookClick = (groupBook) => {\n    props.setGroupBook(groupBook);\n  };\n\n  useEffect(() => {\n    let selectedUser = null;\n    let wrongHostString = document.location.toString();\n    let rightHostString = wrongHostString.replace(\"3001\", \"3000\");\n    fetch(rightHostString)\n      .then((resp) => resp.json())\n      .then((userData) => {\n        selectedUser = userData;\n      })\n      .then(() => {\n        props.setSelectedUser(selectedUser);\n      });\n  }, []);\n\n  if (props.selectedUser) {\n    return <h1>Loading...</h1>;\n  } \n    \n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // userGroups: state.user.userGroups,\n    // user: state.user.user,\n    selectedUser: state.user.selectedUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroupBook: (group) => dispatch(setGroupBook(group)),\n    setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ProfilePage)\n);\n"]},"metadata":{},"sourceType":"module"}