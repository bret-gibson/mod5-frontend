{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image, Card } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  // const [userActiveBooks, setUserActiveBooks] = useState([]);\n  // useEffect(() => {\n  //   getUserActiveBooks();\n  // }, []);\n  // const getUserActiveBooks = () => {\n  //   let activeBooks = [];\n  //   props.user.groups.map((group) => {\n  //     return group.group_books.map((groupBook) => {\n  //       if (groupBook.active === true) {\n  //         activeBooks.push(groupBook.book);\n  //       }\n  //     });\n  //   });\n  //   setUserActiveBooks(activeBooks);\n  //   return activeBooks;\n  // };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"My Active Books\"), props.user.groups.map(group => {\n    return group.group_books.map(groupBook => {\n      if (groupBook.active === true) {\n        return /*#__PURE__*/React.createElement(Card, {\n          style: {\n            display: \"inline-block\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Image, {\n          src: groupBook.book.thumbnail,\n          wrapped: true,\n          ui: false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Card.Content, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Card.Header, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }\n        }, groupBook.book.title), /*#__PURE__*/React.createElement(Card.Meta, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, \"By: \", groupBook.book.author))));\n      }\n    });\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    // user: state.user.user,\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: user => dispatch(setCurrentUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DashboardBooks));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/DashboardBooks.js"],"names":["React","useState","useEffect","NavLink","withRouter","Link","Menu","Button","Image","Card","setCurrentUser","connect","DashboardBooks","props","user","groups","map","group","group_books","groupBook","active","display","book","thumbnail","title","author","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,QAA0C,kBAA1C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,IAA9B,QAA0C,mBAA1C;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAUGA,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AAChC,WAAOA,KAAK,CAACC,WAAN,CAAkBF,GAAlB,CAAuBG,SAAD,IAAe;AAC1C,UAAIA,SAAS,CAACC,MAAV,KAAqB,IAAzB,EAA+B;AAC7B,4BACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEF,SAAS,CAACG,IAAV,CAAeC,SAA3B;AAAsC,UAAA,OAAO,MAA7C;AAA8C,UAAA,EAAE,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAcJ,SAAS,CAACG,IAAV,CAAeE,KAA7B,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWL,SAAS,CAACG,IAAV,CAAeG,MAA1B,CADF,CAFF,CAFF,CADF;AAWD;AACF,KAdM,CAAP;AAeD,GAhBA,CAVH,CADF;AA8BD;;AACD,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL;AACAb,IAAAA,IAAI,EAAEa,KAAK,CAACb;AAFP,GAAP;AAID,CALD;;AAOA,MAAMc,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLnB,IAAAA,cAAc,EAAGI,IAAD,IAAUe,QAAQ,CAACnB,cAAc,CAACI,IAAD,CAAf;AAD7B,GAAP;AAGD,CAJD;;AAKA,eAAeV,UAAU,CACvBO,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,cAA7C,CADuB,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink, withRouter, Link } from \"react-router-dom\";\nimport { Menu, Button, Image, Card } from \"semantic-ui-react\";\nimport { setCurrentUser } from \"../actions/user\";\nimport { connect } from \"react-redux\";\n\nfunction DashboardBooks(props) {\n  // const [userActiveBooks, setUserActiveBooks] = useState([]);\n\n  // useEffect(() => {\n  //   getUserActiveBooks();\n  // }, []);\n\n  // const getUserActiveBooks = () => {\n  //   let activeBooks = [];\n  //   props.user.groups.map((group) => {\n  //     return group.group_books.map((groupBook) => {\n  //       if (groupBook.active === true) {\n  //         activeBooks.push(groupBook.book);\n  //       }\n  //     });\n  //   });\n  //   setUserActiveBooks(activeBooks);\n  //   return activeBooks;\n  // };\n\n  return (\n    <div>\n      <h1>My Active Books</h1>\n\n      {/* {userActiveBooks.length !== 0 ? (\n        userActiveBooks.map((activeBook) => {\n          return <h1>{activeBook.book}</h1>;\n        })\n      ) : (\n        <h1>You have no active books</h1>\n      )}  */}\n      {props.user.groups.map((group) => {\n        return group.group_books.map((groupBook) => {\n          if (groupBook.active === true) {\n            return (\n              <Card style={{ display: \"inline-block\" }}>\n                <Image src={groupBook.book.thumbnail} wrapped ui={false} />\n                <Card.Content>\n                  <Card.Header>{groupBook.book.title}</Card.Header>\n                  <Card.Meta>\n                    <span>By: {groupBook.book.author}</span>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            );\n          }\n        });\n      })}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    // user: state.user.user,\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n  };\n};\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(DashboardBooks)\n);\n"]},"metadata":{},"sourceType":"module"}