{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/Post.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Comment } from \"semantic-ui-react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PostForm from \"./PostForm\";\nimport Moment from \"react-moment\";\nimport { setSelectedUser } from \"../actions/user\";\n\nfunction Post(props) {\n  const [editToggle, setEditToggle] = useState(false);\n\n  const handleEditToggle = e => {\n    setEditToggle(!editToggle);\n  };\n\n  const handleUserClick = e => {\n    props.setSelectedUser(props.post.user);\n    props.history.push(`/users/${props.post.user.id}`);\n  };\n\n  const handleEdit = e => {\n    fetch(`http://localhost:3000/posts/${props.post.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        content: content\n      })\n    }).then(() => {\n      fetch(`http://localhost:3000/group_books/${props.groupBook.id}`).then(resp => resp.json()).then(groupBookData => {\n        props.setBookPosts(groupBookData.posts);\n      });\n    });\n  };\n\n  if (props.user.id === props.post.user.id) {\n    return editToggle ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      as: \"a\",\n      onClick: handleUserClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, props.post.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      fromNow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, props.post.created_at))), /*#__PURE__*/React.createElement(Comment.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, props.post.content), /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleEditToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(Comment.Action, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Delete Post\")))), /*#__PURE__*/React.createElement(PostForm, {\n      previousContent: props.post.content,\n      handleEdit: handleEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    })) :\n    /*#__PURE__*/\n    //   <div>\n    //     <h4>{props.post.user.username} says...</h4>\n    //     <p style={{ display: \"inline-block\", paddingBottom: \"10px\" }}>\n    //       {props.post.content}\n    //     </p>\n    //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n    //       Edit Post\n    //     </Button>\n    //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n    //       Delete Post\n    //     </Button>\n    //   </div>\n    React.createElement(Comment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Author, {\n      as: \"a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, props.post.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      fromNow: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, props.post.created_at))), /*#__PURE__*/React.createElement(Comment.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, props.post.content), /*#__PURE__*/React.createElement(Comment.Actions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Comment.Action, {\n      onClick: handleEditToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Edit Post\"), /*#__PURE__*/React.createElement(Comment.Action, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Delete Post\"))));\n  } else {\n    return (\n      /*#__PURE__*/\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p>{props.post.content}</p>\n      //   </div>\n      React.createElement(Comment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Comment.Author, {\n        as: \"a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, props.post.user.username), /*#__PURE__*/React.createElement(Comment.Metadata, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Moment, {\n        fromNow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }\n      }, props.post.created_at))), /*#__PURE__*/React.createElement(Comment.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, props.post.content)))\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setSelectedUser: user => dispatch(setSelectedUser(user))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/Post.js"],"names":["React","useState","useEffect","Button","Comment","withRouter","Link","connect","PostForm","Moment","setSelectedUser","Post","props","editToggle","setEditToggle","handleEditToggle","e","handleUserClick","post","user","history","push","id","handleEdit","fetch","method","headers","body","JSON","stringify","content","then","groupBook","resp","json","groupBookData","setBookPosts","posts","username","created_at","color","mapStateToProps","state","group","groups","groupUsers","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Comment } from \"semantic-ui-react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PostForm from \"./PostForm\";\nimport Moment from \"react-moment\";\nimport { setSelectedUser } from \"../actions/user\";\n\nfunction Post(props) {\n  const [editToggle, setEditToggle] = useState(false);\n\n  const handleEditToggle = (e) => {\n    setEditToggle(!editToggle);\n  };\n\n  const handleUserClick = (e) => {\n    props.setSelectedUser(props.post.user);\n    props.history.push(`/users/${props.post.user.id}`);\n  };\n\n  const handleEdit = (e) => {\n    fetch(`http://localhost:3000/posts/${props.post.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        content: content,\n      }),\n    }).then(() => {\n      fetch(`http://localhost:3000/group_books/${props.groupBook.id}`)\n        .then((resp) => resp.json())\n        .then((groupBookData) => {\n          props.setBookPosts(groupBookData.posts);\n        });\n    });\n  };\n  if (props.user.id === props.post.user.id) {\n    return editToggle ? (\n      <div>\n        <Comment>\n          <Comment.Content>\n            <Comment.Author as=\"a\" onClick={handleUserClick}>\n              {props.post.user.username}\n            </Comment.Author>\n            <Comment.Metadata>\n              <div>\n                <Moment fromNow>{props.post.created_at}</Moment>\n              </div>\n            </Comment.Metadata>\n            <Comment.Text>{props.post.content}</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action onClick={handleEditToggle}>\n                Edit Post\n              </Comment.Action>\n              <Comment.Action style={{ color: \"red\" }}>\n                Delete Post\n              </Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n        <PostForm\n          previousContent={props.post.content}\n          handleEdit={handleEdit}\n        />\n      </div>\n    ) : (\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p style={{ display: \"inline-block\", paddingBottom: \"10px\" }}>\n      //       {props.post.content}\n      //     </p>\n      //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n      //       Edit Post\n      //     </Button>\n      //     <Button size=\"mini\" style={{ display: \"inline-block\" }}>\n      //       Delete Post\n      //     </Button>\n      //   </div>\n      <Comment>\n        <Comment.Content>\n          <Comment.Author as=\"a\">{props.post.user.username}</Comment.Author>\n          <Comment.Metadata>\n            <div>\n              <Moment fromNow>{props.post.created_at}</Moment>\n            </div>\n          </Comment.Metadata>\n          <Comment.Text>{props.post.content}</Comment.Text>\n          <Comment.Actions>\n            <Comment.Action onClick={handleEditToggle}>\n              Edit Post\n            </Comment.Action>\n            <Comment.Action style={{ color: \"red\" }}>\n              Delete Post\n            </Comment.Action>\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n    );\n  } else {\n    return (\n      //   <div>\n      //     <h4>{props.post.user.username} says...</h4>\n      //     <p>{props.post.content}</p>\n      //   </div>\n      <Comment>\n        <Comment.Content>\n          <Comment.Author as=\"a\">{props.post.user.username}</Comment.Author>\n          <Comment.Metadata>\n            <div>\n              <Moment fromNow>{props.post.created_at}</Moment>\n            </div>\n          </Comment.Metadata>\n          <Comment.Text>{props.post.content}</Comment.Text>\n          {/* <Comment.Actions>\n            <Comment.Action>Edit Post</Comment.Action>\n            <Comment.Action style={{ fontColor: \"red\" }}>\n              Delete Post\n            </Comment.Action>\n          </Comment.Actions> */}\n        </Comment.Content>\n      </Comment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    group: state.groups.group,\n    groupBook: state.groups.groupBook,\n    groupUsers: state.groups.groupUsers,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSelectedUser: (user) => dispatch(setSelectedUser(user)),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));\n"]},"metadata":{},"sourceType":"module"}