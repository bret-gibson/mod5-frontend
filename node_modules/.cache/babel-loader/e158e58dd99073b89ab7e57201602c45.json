{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Form, Segment, Message } from \"semantic-ui-react\";\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleLoginSubmit = () => {\n      console.log(\"attempting to log in\");\n      fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\" // Accept: \"application.json\",\n\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(\"response from the server\", data);\n\n        if (data.error_message) {\n          alert(data.error_message);\n        } else {\n          //successful log in\n          localStorage.setItem(\"token\", data.token);\n          this.props.updateCurrentUser(data.user_data);\n        }\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //   <Segment>\n      //     <Form\n      //       onSubmit={this.handleLoginSubmit}\n      //       size=\"mini\"\n      //       key=\"mini\"\n      //       loading={this.props.authenticatingUser}\n      //       error={this.props.failedLogin}\n      //     >\n      //       <Message\n      //         error\n      //         header={this.props.failedLogin ? this.props.error : null}\n      //       />\n      //       <Form.Group widths=\"equal\">\n      //         <Form.Input\n      //           label=\"username\"\n      //           placeholder=\"username\"\n      //           name=\"username\"\n      //           onChange={this.handleChange}\n      //           value={this.state.username}\n      //         />\n      //         <Form.Input\n      //           type=\"password\"\n      //           label=\"password\"\n      //           placeholder=\"password\"\n      //           name=\"password\"\n      //           onChange={this.handleChange}\n      //           value={this.state.password}\n      //         />\n      //       </Form.Group>\n      //       <Button type=\"submit\">Login</Button>\n      //     </Form>\n      //   </Segment>\n      React.createElement(Grid, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        as: \"h2\",\n        color: \"teal\",\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/static/images/logo.png\",\n        alt: \"logo\",\n        className: \"image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }), \" \", \"Log-in to your account\"), /*#__PURE__*/React.createElement(Form, {\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        stacked: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Username\",\n        name: \"username\",\n        value: input.username,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Form.Input, {\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\",\n        name: \"password\",\n        value: input.password,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        color: \"teal\",\n        fluid: true,\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \"Login\"))), /*#__PURE__*/React.createElement(Message, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, \"New to us? \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#root\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 24\n        }\n      }, \"Sign Up\"))))\n    );\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/LoginForm.js"],"names":["React","withRouter","Button","Form","Segment","Message","LoginForm","Component","state","username","password","handleChange","e","name","value","setState","handleLoginSubmit","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","error_message","alert","localStorage","setItem","token","props","updateCurrentUser","user_data","render","maxWidth","input"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Button, Form, Segment, Message } from \"semantic-ui-react\";\n\nclass LoginForm extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n\n  //When form is submitted, make a fetch to \"log in the user\"\n  handleLoginSubmit = () => {\n    console.log(\"attempting to log in\");\n    fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Accept: \"application.json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username,\n        password: this.state.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"response from the server\", data);\n        if (data.error_message) {\n          alert(data.error_message);\n        } else {\n          //successful log in\n          localStorage.setItem(\"token\", data.token);\n          this.props.updateCurrentUser(data.user_data);\n        }\n      });\n  };\n\n  render() {\n    return (\n      //   <Segment>\n      //     <Form\n      //       onSubmit={this.handleLoginSubmit}\n      //       size=\"mini\"\n      //       key=\"mini\"\n      //       loading={this.props.authenticatingUser}\n      //       error={this.props.failedLogin}\n      //     >\n      //       <Message\n      //         error\n      //         header={this.props.failedLogin ? this.props.error : null}\n      //       />\n      //       <Form.Group widths=\"equal\">\n      //         <Form.Input\n      //           label=\"username\"\n      //           placeholder=\"username\"\n      //           name=\"username\"\n      //           onChange={this.handleChange}\n      //           value={this.state.username}\n      //         />\n      //         <Form.Input\n      //           type=\"password\"\n      //           label=\"password\"\n      //           placeholder=\"password\"\n      //           name=\"password\"\n      //           onChange={this.handleChange}\n      //           value={this.state.password}\n      //         />\n      //       </Form.Group>\n      //       <Button type=\"submit\">Login</Button>\n      //     </Form>\n      //   </Segment>\n\n      <Grid textAlign=\"center\" verticalAlign=\"middle\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <img src=\"/static/images/logo.png\" alt=\"logo\" className=\"image\" />{\" \"}\n            Log-in to your account\n          </Header>\n          <Form size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                name=\"username\"\n                value={input.username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                value={input.password}\n                onChange={handleChange}\n              />\n              <Button color=\"teal\" fluid size=\"large\">\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <a href=\"#root\">Sign Up</a>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n"]},"metadata":{},"sourceType":"module"}