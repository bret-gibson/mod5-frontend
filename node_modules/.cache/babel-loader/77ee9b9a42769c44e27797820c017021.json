{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupSearchContainer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Grid, Image, Button, Form, Item, Divider } from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setMostPopularGroups, setSearchedGroups } from \"../actions/group\";\nimport GroupSearchItem from \"./GroupSearchItem\";\n\nfunction GroupSearchContainer(props) {\n  //   return this.props.user ? (\n  const [input, setInput] = useState({\n    search: \"\"\n  });\n  useEffect(() => {\n    let slicedGroups = null;\n    fetch(\"http://localhost:3000/groups\").then(resp => resp.json()).then(groups => {\n      function compare(a, b) {\n        const usersA = a.users.length;\n        const usersB = b.users.length;\n        let comparison = 0;\n\n        if (usersA > usersB) {\n          comparison = -1;\n        } else if (usersA < usersB) {\n          comparison = 1;\n        }\n\n        return comparison;\n      }\n\n      groups.sort(compare).slice(0, 12);\n      slicedGroups = groups.slice(0, 12);\n    }).then(() => {\n      props.setMostPopularGroups(slicedGroups);\n      props.setSearchedGroups(null); // setMostPopular({\n      //   ...mostPopular,\n      //   mostPopular: slicedBooks,\n      // });\n      // console.log(mostPopular);\n    });\n  }, []);\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: [e.target.value]\n    });\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault(); // props.setSearchedBooks(searchedBooks)\n\n    let searchedGroups = null;\n    fetch(\"http://localhost:3000/groups\").then(resp => resp.json()).then(groups => {\n      searchedGroups = groups.filter(group => {\n        return group.name.toLowerCase().includes(input.search[0].toLowerCase());\n      });\n      props.setSearchedGroups(searchedGroups); // books.sort(compare).slice(0, 12);\n      // slicedBooks = books.slice(0, 12);\n    });\n  };\n\n  if (props.searchedGroups === null && props.mostPopularGroups !== null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Find a Club!\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Search Book Clubs\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleChange,\n      placeholder: \"Search\",\n      name: \"search\",\n      value: input.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"Most Popular Clubs\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Item.Group, {\n      divided: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, props.mostPopularGroups.map(group => {\n      return /*#__PURE__*/React.createElement(GroupSearchItem, {\n        key: group.id,\n        group: group,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 22\n        }\n      });\n    }))));\n  } else if (props.searchedGroups !== null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Find a Club!\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Field, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Search Book Clubs\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: handleChange,\n      placeholder: \"Search\",\n      name: \"search\",\n      value: input.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: handleSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Search Results\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, props.searchedGroups.map(group => {\n      return /*#__PURE__*/React.createElement(GroupSearchItem, {\n        key: group.id,\n        group: group,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 22\n        }\n      });\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 12\n      }\n    }, \" Loading...\");\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    mostPopularGroups: state.groups.mostPopularGroups,\n    searchedGroups: state.groups.searchedGroups\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMostPopularGroups: mostPopularGroups => dispatch(setMostPopularGroups(mostPopularGroups)),\n    setSearchedGroups: searchedGroups => dispatch(setSearchedGroups(searchedGroups))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GroupSearchContainer));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/GroupSearchContainer.js"],"names":["React","useState","useEffect","Card","Grid","Image","Button","Form","Item","Divider","connect","useSelector","withRouter","setMostPopularGroups","setSearchedGroups","GroupSearchItem","GroupSearchContainer","props","input","setInput","search","slicedGroups","fetch","then","resp","json","groups","compare","a","b","usersA","users","length","usersB","comparison","sort","slice","handleChange","e","target","name","value","handleSearchSubmit","preventDefault","searchedGroups","filter","group","toLowerCase","includes","mostPopularGroups","map","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  Grid,\n  Image,\n  Button,\n  Form,\n  Item,\n  Divider,\n} from \"semantic-ui-react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { setMostPopularGroups, setSearchedGroups } from \"../actions/group\";\nimport GroupSearchItem from \"./GroupSearchItem\";\n\nfunction GroupSearchContainer(props) {\n  //   return this.props.user ? (\n\n  const [input, setInput] = useState({\n    search: \"\",\n  });\n\n  useEffect(() => {\n    let slicedGroups = null;\n    fetch(\"http://localhost:3000/groups\")\n      .then((resp) => resp.json())\n      .then((groups) => {\n        function compare(a, b) {\n          const usersA = a.users.length;\n          const usersB = b.users.length;\n\n          let comparison = 0;\n          if (usersA > usersB) {\n            comparison = -1;\n          } else if (usersA < usersB) {\n            comparison = 1;\n          }\n          return comparison;\n        }\n        groups.sort(compare).slice(0, 12);\n        slicedGroups = groups.slice(0, 12);\n      })\n      .then(() => {\n        props.setMostPopularGroups(slicedGroups);\n        props.setSearchedGroups(null);\n        // setMostPopular({\n        //   ...mostPopular,\n        //   mostPopular: slicedBooks,\n        // });\n        // console.log(mostPopular);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: [e.target.value],\n    });\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    // props.setSearchedBooks(searchedBooks)\n    let searchedGroups = null;\n    fetch(\"http://localhost:3000/groups\")\n      .then((resp) => resp.json())\n      .then((groups) => {\n        searchedGroups = groups.filter((group) => {\n          return group.name\n            .toLowerCase()\n            .includes(input.search[0].toLowerCase());\n        });\n        props.setSearchedGroups(searchedGroups);\n        // books.sort(compare).slice(0, 12);\n        // slicedBooks = books.slice(0, 12);\n      });\n  };\n\n  if (props.searchedGroups === null && props.mostPopularGroups !== null) {\n    return (\n      <div>\n        <h1>Find a Club!</h1>\n        <Form>\n          <Form.Field>\n            <label>Search Book Clubs</label>\n            <input\n              onChange={handleChange}\n              placeholder=\"Search\"\n              name=\"search\"\n              value={input.search}\n            />\n          </Form.Field>\n          <Button onClick={handleSearchSubmit}>Search</Button>\n        </Form>\n        <h2>Most Popular Clubs</h2>\n        <div>\n          <Item.Group divided>\n            {props.mostPopularGroups.map((group) => {\n              return <GroupSearchItem key={group.id} group={group} />;\n            })}\n          </Item.Group>\n        </div>\n      </div>\n    );\n  } else if (props.searchedGroups !== null) {\n    return (\n      <div>\n        <h1>Find a Club!</h1>\n        <Form>\n          <Form.Field>\n            <label>Search Book Clubs</label>\n            <input\n              onChange={handleChange}\n              placeholder=\"Search\"\n              name=\"search\"\n              value={input.search}\n            />\n          </Form.Field>\n          <Button onClick={handleSearchSubmit}>Search</Button>\n        </Form>\n        <h2>Search Results</h2>\n        <div>\n          <Card.Group>\n            {props.searchedGroups.map((group) => {\n              return <GroupSearchItem key={group.id} group={group} />;\n            })}\n          </Card.Group>\n        </div>\n      </div>\n    );\n  } else {\n    return <h1> Loading...</h1>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    mostPopularGroups: state.groups.mostPopularGroups,\n    searchedGroups: state.groups.searchedGroups,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMostPopularGroups: (mostPopularGroups) =>\n      dispatch(setMostPopularGroups(mostPopularGroups)),\n    setSearchedGroups: (searchedGroups) =>\n      dispatch(setSearchedGroups(searchedGroups)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(GroupSearchContainer)\n);\n"]},"metadata":{},"sourceType":"module"}