{"ast":null,"code":"var _jsxFileName = \"/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/CreateGroupForm.js\";\nimport React, { useState } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroup } from \"../actions/group\";\n\nfunction CreateGroupForm(props) {\n  const [input, setInput] = useState({\n    name: \"\",\n    description: \"\"\n  });\n\n  const handleChange = e => {\n    setInput({ ...input,\n      [e.target.name]: [e.target.value]\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/groups\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          name: input.name,\n          description: input.description,\n          public: true,\n          admin_user_id: props.user.id\n        }\n      })\n    }).then(res => res.json()).then(group => {\n      props.setGroup(group);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: this.cardStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"violet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Back to questions\")), /*#__PURE__*/React.createElement(Card, {\n    style: this.formStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    header: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Make Your Own Question!\")), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Group Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Title\",\n    name: \"title\",\n    type: \"text\",\n    onChange: this.handleChange,\n    value: this.state.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Option #1\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Option #1\",\n    name: \"first_option\",\n    type: \"text\",\n    onChange: this.handleChange,\n    value: this.state.first_option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Option #2\",\n    name: \"second_option\",\n    type: \"text\",\n    onChange: this.handleChange,\n    value: this.state.second_option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Context\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Context\",\n    name: \"context\",\n    type: \"text\",\n    onChange: this.handleChange,\n    value: this.state.context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    color: \"violet\",\n    style: this.formButtonStyle,\n    size: \"mini\",\n    type: \"submit\",\n    value: \"Submit Question\",\n    onClick: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Submit Question\"))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGroup: group => dispatch(setGroup(group))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreateGroupForm));","map":{"version":3,"sources":["/Users/bretgibson/Development/code/mod_5/book-club-frontend/src/components/CreateGroupForm.js"],"names":["React","useState","Card","Grid","Image","Button","Form","connect","withRouter","Link","setGroup","CreateGroupForm","props","input","setInput","name","description","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","user","public","admin_user_id","id","then","res","json","group","cardStyle","formStyle","state","title","first_option","second_option","context","formButtonStyle","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Grid, Image, Button, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { setGroup } from \"../actions/group\";\n\nfunction CreateGroupForm(props) {\n  const [input, setInput] = useState({\n    name: \"\",\n    description: \"\",\n  });\n\n  const handleChange = (e) => {\n    setInput({\n      ...input,\n      [e.target.name]: [e.target.value],\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/groups\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          name: input.name,\n          description: input.description,\n          public: true,\n          admin_user_id: props.user.id,\n        },\n      }),\n    })\n      .then((res) => res.json())\n      .then((group) => {\n        props.setGroup(group);\n      });\n  };\n\n  return (\n    <div style={this.cardStyle}>\n    <Link to=\"/question\">\n        <Button color='violet'>Back to questions</Button>\n    </Link>\n    <Card style={this.formStyle}>\n      <Card.Content header>\n        <b>Make Your Own Question!</b>\n      </Card.Content>\n      <Form>\n        <Form.Field>\n        <label>Group Name</label>\n        <input placeholder='Title' name='title' type='text' onChange={this.handleChange} value={this.state.title} />\n        </Form.Field>\n\n        <Form.Field>\n        <label>Option #1</label>\n        <input placeholder='Option #1' name='first_option' type='text' onChange={this.handleChange} value={this.state.first_option} />\n        </Form.Field>\n\n        <Form.Field>\n        <label></label>\n        <input placeholder='Option #2' name='second_option' type='text' onChange={this.handleChange} value={this.state.second_option} />\n        </Form.Field>\n\n        <Form.Field>\n        <label>Context</label>\n        <input placeholder='Context' name='context' type='text' onChange={this.handleChange} value={this.state.context} />\n        </Form.Field>\n\n        <Button color='violet'style={this.formButtonStyle} size='mini' type='submit' value='Submit Question' onClick={this.handleSubmit}>Submit Question</Button>\n      </Form>\n    </Card>\n</div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setGroup: (group) => dispatch(setGroup(group)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CreateGroupForm)\n);\n"]},"metadata":{},"sourceType":"module"}